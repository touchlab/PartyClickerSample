//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherCursorWrapper")
#ifdef RESTRICT_NetSqlcipherCursorWrapper
#define INCLUDE_ALL_NetSqlcipherCursorWrapper 0
#else
#define INCLUDE_ALL_NetSqlcipherCursorWrapper 1
#endif
#undef RESTRICT_NetSqlcipherCursorWrapper

#if !defined (NetSqlcipherCursorWrapper_) && (INCLUDE_ALL_NetSqlcipherCursorWrapper || defined(INCLUDE_NetSqlcipherCursorWrapper))
#define NetSqlcipherCursorWrapper_

#define RESTRICT_AndroidDatabaseCursorWrapper 1
#define INCLUDE_AndroidDatabaseCursorWrapper 1
#include "AndroidDatabaseCursorWrapper.h"

#define RESTRICT_NetSqlcipherCursor 1
#define INCLUDE_NetSqlcipherCursor 1
#include "NetSqlcipherCursor.h"

@interface NetSqlcipherCursorWrapper : AndroidDatabaseCursorWrapper < NetSqlcipherCursor >

#pragma mark Public

- (instancetype)initWithNetSqlcipherCursor:(id<NetSqlcipherCursor>)cursor;

- (jint)getTypeWithInt:(jint)columnIndex;

- (id<NetSqlcipherCursor>)getWrappedCursor;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherCursorWrapper)

FOUNDATION_EXPORT void NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(NetSqlcipherCursorWrapper *self, id<NetSqlcipherCursor> cursor);

FOUNDATION_EXPORT NetSqlcipherCursorWrapper *new_NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(id<NetSqlcipherCursor> cursor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherCursorWrapper *create_NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(id<NetSqlcipherCursor> cursor);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherCursorWrapper)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherCursorWrapper")

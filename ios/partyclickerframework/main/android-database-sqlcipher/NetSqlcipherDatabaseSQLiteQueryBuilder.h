//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherDatabaseSQLiteQueryBuilder")
#ifdef RESTRICT_NetSqlcipherDatabaseSQLiteQueryBuilder
#define INCLUDE_ALL_NetSqlcipherDatabaseSQLiteQueryBuilder 0
#else
#define INCLUDE_ALL_NetSqlcipherDatabaseSQLiteQueryBuilder 1
#endif
#undef RESTRICT_NetSqlcipherDatabaseSQLiteQueryBuilder

#if !defined (NetSqlcipherDatabaseSQLiteQueryBuilder_) && (INCLUDE_ALL_NetSqlcipherDatabaseSQLiteQueryBuilder || defined(INCLUDE_NetSqlcipherDatabaseSQLiteQueryBuilder))
#define NetSqlcipherDatabaseSQLiteQueryBuilder_

@class IOSObjectArray;
@class JavaLangStringBuilder;
@class NetSqlcipherDatabaseSQLiteDatabase;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol NetSqlcipherCursor;
@protocol NetSqlcipherDatabaseSQLiteDatabase_CursorFactory;

@interface NetSqlcipherDatabaseSQLiteQueryBuilder : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)appendColumnsWithJavaLangStringBuilder:(JavaLangStringBuilder *)s
                             withNSStringArray:(IOSObjectArray *)columns;

- (void)appendWhereWithJavaLangCharSequence:(id<JavaLangCharSequence>)inWhere;

- (void)appendWhereEscapeStringWithNSString:(NSString *)inWhere;

- (NSString *)buildQueryWithNSStringArray:(IOSObjectArray *)projectionIn
                             withNSString:(NSString *)selection
                        withNSStringArray:(IOSObjectArray *)selectionArgs
                             withNSString:(NSString *)groupBy
                             withNSString:(NSString *)having
                             withNSString:(NSString *)sortOrder
                             withNSString:(NSString *)limit;

+ (NSString *)buildQueryStringWithBoolean:(jboolean)distinct
                             withNSString:(NSString *)tables
                        withNSStringArray:(IOSObjectArray *)columns
                             withNSString:(NSString *)where
                             withNSString:(NSString *)groupBy
                             withNSString:(NSString *)having
                             withNSString:(NSString *)orderBy
                             withNSString:(NSString *)limit;

- (NSString *)buildUnionQueryWithNSStringArray:(IOSObjectArray *)subQueries
                                  withNSString:(NSString *)sortOrder
                                  withNSString:(NSString *)limit;

- (NSString *)buildUnionSubQueryWithNSString:(NSString *)typeDiscriminatorColumn
                           withNSStringArray:(IOSObjectArray *)unionColumns
                             withJavaUtilSet:(id<JavaUtilSet>)columnsPresentInTable
                                     withInt:(jint)computedColumnsOffset
                                withNSString:(NSString *)typeDiscriminatorValue
                                withNSString:(NSString *)selection
                           withNSStringArray:(IOSObjectArray *)selectionArgs
                                withNSString:(NSString *)groupBy
                                withNSString:(NSString *)having;

- (NSString *)getTables;

- (id<NetSqlcipherCursor>)queryWithNetSqlcipherDatabaseSQLiteDatabase:(NetSqlcipherDatabaseSQLiteDatabase *)db
                                                    withNSStringArray:(IOSObjectArray *)projectionIn
                                                         withNSString:(NSString *)selection
                                                    withNSStringArray:(IOSObjectArray *)selectionArgs
                                                         withNSString:(NSString *)groupBy
                                                         withNSString:(NSString *)having
                                                         withNSString:(NSString *)sortOrder;

- (id<NetSqlcipherCursor>)queryWithNetSqlcipherDatabaseSQLiteDatabase:(NetSqlcipherDatabaseSQLiteDatabase *)db
                                                    withNSStringArray:(IOSObjectArray *)projectionIn
                                                         withNSString:(NSString *)selection
                                                    withNSStringArray:(IOSObjectArray *)selectionArgs
                                                         withNSString:(NSString *)groupBy
                                                         withNSString:(NSString *)having
                                                         withNSString:(NSString *)sortOrder
                                                         withNSString:(NSString *)limit;

- (void)setCursorFactoryWithNetSqlcipherDatabaseSQLiteDatabase_CursorFactory:(id<NetSqlcipherDatabaseSQLiteDatabase_CursorFactory>)factory;

- (void)setDistinctWithBoolean:(jboolean)distinct;

- (void)setProjectionMapWithJavaUtilMap:(id<JavaUtilMap>)columnMap;

- (void)setStrictProjectionMapWithBoolean:(jboolean)flag;

- (void)setTablesWithNSString:(NSString *)inTables;

@end

J2OBJC_STATIC_INIT(NetSqlcipherDatabaseSQLiteQueryBuilder)

FOUNDATION_EXPORT void NetSqlcipherDatabaseSQLiteQueryBuilder_init(NetSqlcipherDatabaseSQLiteQueryBuilder *self);

FOUNDATION_EXPORT NetSqlcipherDatabaseSQLiteQueryBuilder *new_NetSqlcipherDatabaseSQLiteQueryBuilder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherDatabaseSQLiteQueryBuilder *create_NetSqlcipherDatabaseSQLiteQueryBuilder_init();

FOUNDATION_EXPORT NSString *NetSqlcipherDatabaseSQLiteQueryBuilder_buildQueryStringWithBoolean_withNSString_withNSStringArray_withNSString_withNSString_withNSString_withNSString_withNSString_(jboolean distinct, NSString *tables, IOSObjectArray *columns, NSString *where, NSString *groupBy, NSString *having, NSString *orderBy, NSString *limit);

FOUNDATION_EXPORT void NetSqlcipherDatabaseSQLiteQueryBuilder_appendColumnsWithJavaLangStringBuilder_withNSStringArray_(JavaLangStringBuilder *s, IOSObjectArray *columns);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherDatabaseSQLiteQueryBuilder)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherDatabaseSQLiteQueryBuilder")

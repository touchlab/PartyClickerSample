//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherIBulkCursor")
#ifdef RESTRICT_NetSqlcipherIBulkCursor
#define INCLUDE_ALL_NetSqlcipherIBulkCursor 0
#else
#define INCLUDE_ALL_NetSqlcipherIBulkCursor 1
#endif
#undef RESTRICT_NetSqlcipherIBulkCursor

#if !defined (NetSqlcipherIBulkCursor_) && (INCLUDE_ALL_NetSqlcipherIBulkCursor || defined(INCLUDE_NetSqlcipherIBulkCursor))
#define NetSqlcipherIBulkCursor_

#define RESTRICT_AndroidOsIInterface 1
#define INCLUDE_AndroidOsIInterface 1
#include "AndroidOsIInterface.h"

@class AndroidOsBundle;
@class IOSObjectArray;
@class NetSqlcipherCursorWindow;
@protocol JavaUtilMap;

@protocol NetSqlcipherIBulkCursor < AndroidOsIInterface, JavaObject >

- (NetSqlcipherCursorWindow *)getWindowWithInt:(jint)startPos;

- (void)onMoveWithInt:(jint)position;

- (jint)count;

- (IOSObjectArray *)getColumnNames;

- (jboolean)updateRowsWithJavaUtilMap:(id<JavaUtilMap>)values;

- (jboolean)deleteRowWithInt:(jint)position;

- (void)deactivate;

- (void)close;

- (jboolean)getWantsAllOnMoveCalls;

- (AndroidOsBundle *)getExtras;

- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherIBulkCursor)

inline NSString *NetSqlcipherIBulkCursor_get_descriptor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetSqlcipherIBulkCursor_descriptor;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetSqlcipherIBulkCursor, descriptor, NSString *)

inline jint NetSqlcipherIBulkCursor_get_GET_CURSOR_WINDOW_TRANSACTION();
#define NetSqlcipherIBulkCursor_GET_CURSOR_WINDOW_TRANSACTION 1
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, GET_CURSOR_WINDOW_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_COUNT_TRANSACTION();
#define NetSqlcipherIBulkCursor_COUNT_TRANSACTION 2
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, COUNT_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_GET_COLUMN_NAMES_TRANSACTION();
#define NetSqlcipherIBulkCursor_GET_COLUMN_NAMES_TRANSACTION 3
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, GET_COLUMN_NAMES_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_UPDATE_ROWS_TRANSACTION();
#define NetSqlcipherIBulkCursor_UPDATE_ROWS_TRANSACTION 4
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, UPDATE_ROWS_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_DELETE_ROW_TRANSACTION();
#define NetSqlcipherIBulkCursor_DELETE_ROW_TRANSACTION 5
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, DELETE_ROW_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_DEACTIVATE_TRANSACTION();
#define NetSqlcipherIBulkCursor_DEACTIVATE_TRANSACTION 6
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, DEACTIVATE_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_REQUERY_TRANSACTION();
#define NetSqlcipherIBulkCursor_REQUERY_TRANSACTION 7
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, REQUERY_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_ON_MOVE_TRANSACTION();
#define NetSqlcipherIBulkCursor_ON_MOVE_TRANSACTION 8
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, ON_MOVE_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_WANTS_ON_MOVE_TRANSACTION();
#define NetSqlcipherIBulkCursor_WANTS_ON_MOVE_TRANSACTION 9
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, WANTS_ON_MOVE_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_GET_EXTRAS_TRANSACTION();
#define NetSqlcipherIBulkCursor_GET_EXTRAS_TRANSACTION 10
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, GET_EXTRAS_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_RESPOND_TRANSACTION();
#define NetSqlcipherIBulkCursor_RESPOND_TRANSACTION 11
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, RESPOND_TRANSACTION, jint)

inline jint NetSqlcipherIBulkCursor_get_CLOSE_TRANSACTION();
#define NetSqlcipherIBulkCursor_CLOSE_TRANSACTION 12
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherIBulkCursor, CLOSE_TRANSACTION, jint)

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherIBulkCursor)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherIBulkCursor")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherDatabaseSQLiteCursor")
#ifdef RESTRICT_NetSqlcipherDatabaseSQLiteCursor
#define INCLUDE_ALL_NetSqlcipherDatabaseSQLiteCursor 0
#else
#define INCLUDE_ALL_NetSqlcipherDatabaseSQLiteCursor 1
#endif
#undef RESTRICT_NetSqlcipherDatabaseSQLiteCursor

#if !defined (NetSqlcipherDatabaseSQLiteCursor_) && (INCLUDE_ALL_NetSqlcipherDatabaseSQLiteCursor || defined(INCLUDE_NetSqlcipherDatabaseSQLiteCursor))
#define NetSqlcipherDatabaseSQLiteCursor_

#define RESTRICT_NetSqlcipherAbstractWindowedCursor 1
#define INCLUDE_NetSqlcipherAbstractWindowedCursor 1
#include "NetSqlcipherAbstractWindowedCursor.h"

@class AndroidDatabaseCursorWindow;
@class AndroidDatabaseDataSetObserver;
@class IOSObjectArray;
@class NetSqlcipherCursorWindow;
@class NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler;
@class NetSqlcipherDatabaseSQLiteDatabase;
@class NetSqlcipherDatabaseSQLiteQuery;
@protocol JavaUtilMap;
@protocol NetSqlcipherDatabaseSQLiteCursorDriver;

@interface NetSqlcipherDatabaseSQLiteCursor : NetSqlcipherAbstractWindowedCursor {
 @public
  NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler *mNotificationHandler_;
}

#pragma mark Public

- (instancetype)initWithNetSqlcipherDatabaseSQLiteDatabase:(NetSqlcipherDatabaseSQLiteDatabase *)db
                withNetSqlcipherDatabaseSQLiteCursorDriver:(id<NetSqlcipherDatabaseSQLiteCursorDriver>)driver
                                              withNSString:(NSString *)editTable
                       withNetSqlcipherDatabaseSQLiteQuery:(NetSqlcipherDatabaseSQLiteQuery *)query;

- (void)close;

- (jboolean)commitUpdatesWithJavaUtilMap:(id<JavaUtilMap>)additionalValues;

- (void)deactivate;

- (jboolean)deleteRow;

- (void)fillWindowWithInt:(jint)startPos
withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;

- (jint)getColumnIndexWithNSString:(NSString *)columnName;

- (IOSObjectArray *)getColumnNames;

- (jint)getCount;

- (NetSqlcipherDatabaseSQLiteDatabase *)getDatabase;

- (jboolean)onMoveWithInt:(jint)oldPosition
                  withInt:(jint)newPosition;

- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;

- (jboolean)requery;

- (void)setLoadStyleWithInt:(jint)initialRead
                    withInt:(jint)maxRead;

- (void)setSelectionArgumentsWithNSStringArray:(IOSObjectArray *)selectionArgs;

- (void)setWindowWithNetSqlcipherCursorWindow:(NetSqlcipherCursorWindow *)window;

- (jboolean)supportsUpdates;

#pragma mark Protected

- (void)java_finalize;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherDatabaseSQLiteCursor)

J2OBJC_FIELD_SETTER(NetSqlcipherDatabaseSQLiteCursor, mNotificationHandler_, NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler *)

inline NSString *NetSqlcipherDatabaseSQLiteCursor_get_TAG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetSqlcipherDatabaseSQLiteCursor_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetSqlcipherDatabaseSQLiteCursor, TAG, NSString *)

inline jint NetSqlcipherDatabaseSQLiteCursor_get_NO_COUNT();
#define NetSqlcipherDatabaseSQLiteCursor_NO_COUNT -1
J2OBJC_STATIC_FIELD_CONSTANT(NetSqlcipherDatabaseSQLiteCursor, NO_COUNT, jint)

FOUNDATION_EXPORT void NetSqlcipherDatabaseSQLiteCursor_initWithNetSqlcipherDatabaseSQLiteDatabase_withNetSqlcipherDatabaseSQLiteCursorDriver_withNSString_withNetSqlcipherDatabaseSQLiteQuery_(NetSqlcipherDatabaseSQLiteCursor *self, NetSqlcipherDatabaseSQLiteDatabase *db, id<NetSqlcipherDatabaseSQLiteCursorDriver> driver, NSString *editTable, NetSqlcipherDatabaseSQLiteQuery *query);

FOUNDATION_EXPORT NetSqlcipherDatabaseSQLiteCursor *new_NetSqlcipherDatabaseSQLiteCursor_initWithNetSqlcipherDatabaseSQLiteDatabase_withNetSqlcipherDatabaseSQLiteCursorDriver_withNSString_withNetSqlcipherDatabaseSQLiteQuery_(NetSqlcipherDatabaseSQLiteDatabase *db, id<NetSqlcipherDatabaseSQLiteCursorDriver> driver, NSString *editTable, NetSqlcipherDatabaseSQLiteQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherDatabaseSQLiteCursor *create_NetSqlcipherDatabaseSQLiteCursor_initWithNetSqlcipherDatabaseSQLiteDatabase_withNetSqlcipherDatabaseSQLiteCursorDriver_withNSString_withNetSqlcipherDatabaseSQLiteQuery_(NetSqlcipherDatabaseSQLiteDatabase *db, id<NetSqlcipherDatabaseSQLiteCursorDriver> driver, NSString *editTable, NetSqlcipherDatabaseSQLiteQuery *query);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherDatabaseSQLiteCursor)

#endif

#if !defined (NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler_) && (INCLUDE_ALL_NetSqlcipherDatabaseSQLiteCursor || defined(INCLUDE_NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler))
#define NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler_

#define RESTRICT_AndroidOsHandler 1
#define INCLUDE_AndroidOsHandler 1
#include "AndroidOsHandler.h"

@class AndroidOsMessage;
@class NetSqlcipherDatabaseSQLiteCursor;

@interface NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler : AndroidOsHandler

#pragma mark Public

- (void)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;

#pragma mark Package-Private

- (instancetype)initWithNetSqlcipherDatabaseSQLiteCursor:(NetSqlcipherDatabaseSQLiteCursor *)cursor;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler)

FOUNDATION_EXPORT void NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler_initWithNetSqlcipherDatabaseSQLiteCursor_(NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler *self, NetSqlcipherDatabaseSQLiteCursor *cursor);

FOUNDATION_EXPORT NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler *new_NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler_initWithNetSqlcipherDatabaseSQLiteCursor_(NetSqlcipherDatabaseSQLiteCursor *cursor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler *create_NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler_initWithNetSqlcipherDatabaseSQLiteCursor_(NetSqlcipherDatabaseSQLiteCursor *cursor);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherDatabaseSQLiteCursor_MainThreadNotificationHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherDatabaseSQLiteCursor")

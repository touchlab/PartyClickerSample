//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidAppApplication.h"
#include "CoTouchlabTestTestDb.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "NetSqlcipherCursor.h"
#include "NetSqlcipherDatabaseSQLiteDatabase.h"
#include "android/util/Log.h"
#include "java/io/File.h"

@implementation CoTouchlabTestTestDb

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabTestTestDb_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)testDbWithAndroidAppApplication:(AndroidAppApplication *)application {
  CoTouchlabTestTestDb_testDbWithAndroidAppApplication_(application);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testDbWithAndroidAppApplication:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "testDb", "LAndroidAppApplication;" };
  static const J2ObjcClassInfo _CoTouchlabTestTestDb = { "TestDb", "co.touchlab.test", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabTestTestDb;
}

@end

void CoTouchlabTestTestDb_init(CoTouchlabTestTestDb *self) {
  NSObject_init(self);
}

CoTouchlabTestTestDb *new_CoTouchlabTestTestDb_init() {
  J2OBJC_NEW_IMPL(CoTouchlabTestTestDb, init)
}

CoTouchlabTestTestDb *create_CoTouchlabTestTestDb_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabTestTestDb, init)
}

void CoTouchlabTestTestDb_testDbWithAndroidAppApplication_(AndroidAppApplication *application) {
  CoTouchlabTestTestDb_initialize();
  NetSqlcipherDatabaseSQLiteDatabase_nativeInit();
  JavaIoFile *databaseFile = [((AndroidAppApplication *) nil_chk(application)) getDatabasePathWithNSString:@"demo.db"];
  NetSqlcipherDatabaseSQLiteDatabase *database = NetSqlcipherDatabaseSQLiteDatabase_openOrCreateDatabaseWithJavaIoFile_withNSString_withNetSqlcipherDatabaseSQLiteDatabase_CursorFactory_(databaseFile, @"test123", nil);
  [((NetSqlcipherDatabaseSQLiteDatabase *) nil_chk(database)) execSQLWithNSString:@"insert into t1(a, b) values(?, ?)" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ @"asdf", @"qwert" } count:2 type:NSObject_class_()]];
  id<NetSqlcipherCursor> cursor = [database queryWithNSString:@"t1" withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"a", @"b" } count:2 type:NSString_class_()] withNSString:nil withNSStringArray:nil withNSString:nil withNSString:nil withNSString:nil];
  [((id<NetSqlcipherCursor>) nil_chk(cursor)) moveToFirst];
  while (![cursor isAfterLast]) {
    AndroidUtilLog_wWithNSString_withNSString_([CoTouchlabTestTestDb_class_() getSimpleName], JreStrcat("$$", @"a: ", [cursor getStringWithInt:0]));
    AndroidUtilLog_wWithNSString_withNSString_([CoTouchlabTestTestDb_class_() getSimpleName], JreStrcat("$$", @"b: ", [cursor getStringWithInt:1]));
    [cursor moveToNext];
  }
  [cursor close];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabTestTestDb)

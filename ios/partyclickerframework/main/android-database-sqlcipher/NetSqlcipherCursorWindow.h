//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherCursorWindow")
#ifdef RESTRICT_NetSqlcipherCursorWindow
#define INCLUDE_ALL_NetSqlcipherCursorWindow 0
#else
#define INCLUDE_ALL_NetSqlcipherCursorWindow 1
#endif
#undef RESTRICT_NetSqlcipherCursorWindow

#if !defined (NetSqlcipherCursorWindow_) && (INCLUDE_ALL_NetSqlcipherCursorWindow || defined(INCLUDE_NetSqlcipherCursorWindow))
#define NetSqlcipherCursorWindow_

#define RESTRICT_AndroidDatabaseCursorWindow 1
#define INCLUDE_AndroidDatabaseCursorWindow 1
#include "AndroidDatabaseCursorWindow.h"

#define RESTRICT_AndroidOsParcelable 1
#define INCLUDE_AndroidOsParcelable 1
#include "AndroidOsParcelable.h"

@class AndroidDatabaseCharArrayBuffer;
@class AndroidOsParcel;
@class IOSByteArray;
@protocol AndroidOsParcelable_Creator;

@interface NetSqlcipherCursorWindow : AndroidDatabaseCursorWindow < AndroidOsParcelable >

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)localWindow;

- (jboolean)allocRow OBJC_METHOD_FAMILY_NONE;

- (void)clear;

- (void)close;

- (void)copyStringToBufferWithInt:(jint)row
                          withInt:(jint)col
withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;

- (jint)describeContents;

- (void)freeLastRow;

- (IOSByteArray *)getBlobWithInt:(jint)row
                         withInt:(jint)col;

- (jdouble)getDoubleWithInt:(jint)row
                    withInt:(jint)col;

- (jfloat)getFloatWithInt:(jint)row
                  withInt:(jint)col;

- (jint)getIntWithInt:(jint)row
              withInt:(jint)col;

- (jlong)getLongWithInt:(jint)row
                withInt:(jint)col;

- (jint)getNumRows;

- (jshort)getShortWithInt:(jint)row
                  withInt:(jint)col;

- (jint)getStartPosition;

- (NSString *)getStringWithInt:(jint)row
                       withInt:(jint)col;

- (jint)getTypeWithInt:(jint)row
               withInt:(jint)col;

- (jboolean)isBlobWithInt:(jint)row
                  withInt:(jint)col;

- (jboolean)isFloatWithInt:(jint)row
                   withInt:(jint)col;

- (jboolean)isLongWithInt:(jint)row
                  withInt:(jint)col;

- (jboolean)isNullWithInt:(jint)row
                  withInt:(jint)col;

- (jboolean)isStringWithInt:(jint)row
                    withInt:(jint)col;

+ (NetSqlcipherCursorWindow *)newFromParcelWithAndroidOsParcel:(AndroidOsParcel *)p OBJC_METHOD_FAMILY_NONE;

- (jboolean)putBlobWithByteArray:(IOSByteArray *)value
                         withInt:(jint)row
                         withInt:(jint)col;

- (jboolean)putDoubleWithDouble:(jdouble)value
                        withInt:(jint)row
                        withInt:(jint)col;

- (jboolean)putLongWithLong:(jlong)value
                    withInt:(jint)row
                    withInt:(jint)col;

- (jboolean)putNullWithInt:(jint)row
                   withInt:(jint)col;

- (jboolean)putStringWithNSString:(NSString *)value
                          withInt:(jint)row
                          withInt:(jint)col;

- (jboolean)setNumColumnsWithInt:(jint)columnNum;

- (void)setStartPositionWithInt:(jint)pos;

- (void)writeToParcelWithAndroidOsParcel:(AndroidOsParcel *)dest
                                 withInt:(jint)flags;

#pragma mark Protected

- (void)java_finalize;

- (void)onAllReferencesReleased;

@end

J2OBJC_STATIC_INIT(NetSqlcipherCursorWindow)

inline id<AndroidOsParcelable_Creator> NetSqlcipherCursorWindow_get_CREATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<AndroidOsParcelable_Creator> NetSqlcipherCursorWindow_CREATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetSqlcipherCursorWindow, CREATOR, id<AndroidOsParcelable_Creator>)

FOUNDATION_EXPORT void NetSqlcipherCursorWindow_initWithBoolean_(NetSqlcipherCursorWindow *self, jboolean localWindow);

FOUNDATION_EXPORT NetSqlcipherCursorWindow *new_NetSqlcipherCursorWindow_initWithBoolean_(jboolean localWindow) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherCursorWindow *create_NetSqlcipherCursorWindow_initWithBoolean_(jboolean localWindow);

FOUNDATION_EXPORT NetSqlcipherCursorWindow *NetSqlcipherCursorWindow_newFromParcelWithAndroidOsParcel_(AndroidOsParcel *p);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherCursorWindow)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherCursorWindow")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseCursorWindow.h"
#include "J2ObjC_source.h"
#include "NetSqlcipherCrossProcessCursorWrapper.h"
#include "NetSqlcipherCursor.h"
#include "NetSqlcipherCursorWrapper.h"
#include "NetSqlcipherDatabaseUtils.h"

@implementation NetSqlcipherCrossProcessCursorWrapper

- (instancetype)initWithNetSqlcipherCursor:(id<NetSqlcipherCursor>)cursor {
  NetSqlcipherCrossProcessCursorWrapper_initWithNetSqlcipherCursor_(self, cursor);
  return self;
}

- (AndroidDatabaseCursorWindow *)getWindow {
  return nil;
}

- (void)fillWindowWithInt:(jint)position
withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window {
  NetSqlcipherDatabaseUtils_cursorFillWindowWithNetSqlcipherCursor_withInt_withAndroidDatabaseCursorWindow_(self, position, window);
}

- (jboolean)onMoveWithInt:(jint)oldPosition
                  withInt:(jint)newPosition {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidDatabaseCursorWindow;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNetSqlcipherCursor:);
  methods[1].selector = @selector(getWindow);
  methods[2].selector = @selector(fillWindowWithInt:withAndroidDatabaseCursorWindow:);
  methods[3].selector = @selector(onMoveWithInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetSqlcipherCursor;", "fillWindow", "ILAndroidDatabaseCursorWindow;", "onMove", "II" };
  static const J2ObjcClassInfo _NetSqlcipherCrossProcessCursorWrapper = { "CrossProcessCursorWrapper", "net.sqlcipher", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_NetSqlcipherCrossProcessCursorWrapper;
}

@end

void NetSqlcipherCrossProcessCursorWrapper_initWithNetSqlcipherCursor_(NetSqlcipherCrossProcessCursorWrapper *self, id<NetSqlcipherCursor> cursor) {
  NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(self, cursor);
}

NetSqlcipherCrossProcessCursorWrapper *new_NetSqlcipherCrossProcessCursorWrapper_initWithNetSqlcipherCursor_(id<NetSqlcipherCursor> cursor) {
  J2OBJC_NEW_IMPL(NetSqlcipherCrossProcessCursorWrapper, initWithNetSqlcipherCursor_, cursor)
}

NetSqlcipherCrossProcessCursorWrapper *create_NetSqlcipherCrossProcessCursorWrapper_initWithNetSqlcipherCursor_(id<NetSqlcipherCursor> cursor) {
  J2OBJC_CREATE_IMPL(NetSqlcipherCrossProcessCursorWrapper, initWithNetSqlcipherCursor_, cursor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetSqlcipherCrossProcessCursorWrapper)

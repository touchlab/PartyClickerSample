//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoAbstractDao.h"
#include "OrgGreenrobotGreendaoAbstractDaoSession.h"
#include "OrgGreenrobotGreendaoDaoException.h"
#include "OrgGreenrobotGreendaoDaoLog.h"
#include "OrgGreenrobotGreendaoDatabaseDatabase.h"
#include "OrgGreenrobotGreendaoInternalSqlUtils.h"
#include "OrgGreenrobotGreendaoProperty.h"
#include "OrgGreenrobotGreendaoQueryCloseableListIterator.h"
#include "OrgGreenrobotGreendaoQueryCountQuery.h"
#include "OrgGreenrobotGreendaoQueryCursorQuery.h"
#include "OrgGreenrobotGreendaoQueryDeleteQuery.h"
#include "OrgGreenrobotGreendaoQueryJoin.h"
#include "OrgGreenrobotGreendaoQueryLazyList.h"
#include "OrgGreenrobotGreendaoQueryQuery.h"
#include "OrgGreenrobotGreendaoQueryQueryBuilder.h"
#include "OrgGreenrobotGreendaoQueryWhereCollector.h"
#include "OrgGreenrobotGreendaoQueryWhereCondition.h"
#include "OrgGreenrobotGreendaoRxRxQuery.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface OrgGreenrobotGreendaoQueryQueryBuilder () {
 @public
  OrgGreenrobotGreendaoQueryWhereCollector *whereCollector_;
  JavaLangStringBuilder *orderBuilder_;
  id<JavaUtilList> values_;
  id<JavaUtilList> joins_;
  OrgGreenrobotGreendaoAbstractDao *dao_;
  NSString *tablePrefix_;
  JavaLangInteger *limit_;
  JavaLangInteger *offset_;
  jboolean distinct_;
  NSString *stringOrderCollation_;
}

- (void)checkOrderBuilder;

- (OrgGreenrobotGreendaoQueryJoin *)addJoinWithNSString:(NSString *)sourceTablePrefix
                      withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)sourceProperty
                   withOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)destinationDao
                      withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)destinationProperty;

- (void)orderAscOrDescWithNSString:(NSString *)ascOrDescWithLeadingSpace
withOrgGreenrobotGreendaoPropertyArray:(IOSObjectArray *)properties;

- (JavaLangStringBuilder *)createSelectBuilder;

- (jint)checkAddLimitWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

- (jint)checkAddOffsetWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

- (void)checkLogWithNSString:(NSString *)sql;

- (void)appendJoinsAndWheresWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                         withNSString:(NSString *)tablePrefixOrNull;

@end

J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, whereCollector_, OrgGreenrobotGreendaoQueryWhereCollector *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, orderBuilder_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, values_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, joins_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, dao_, OrgGreenrobotGreendaoAbstractDao *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, tablePrefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, limit_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, offset_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoQueryQueryBuilder, stringOrderCollation_, NSString *)

__attribute__((unused)) static void OrgGreenrobotGreendaoQueryQueryBuilder_checkOrderBuilder(OrgGreenrobotGreendaoQueryQueryBuilder *self);

__attribute__((unused)) static OrgGreenrobotGreendaoQueryJoin *OrgGreenrobotGreendaoQueryQueryBuilder_addJoinWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_(OrgGreenrobotGreendaoQueryQueryBuilder *self, NSString *sourceTablePrefix, OrgGreenrobotGreendaoProperty *sourceProperty, OrgGreenrobotGreendaoAbstractDao *destinationDao, OrgGreenrobotGreendaoProperty *destinationProperty);

__attribute__((unused)) static void OrgGreenrobotGreendaoQueryQueryBuilder_orderAscOrDescWithNSString_withOrgGreenrobotGreendaoPropertyArray_(OrgGreenrobotGreendaoQueryQueryBuilder *self, NSString *ascOrDescWithLeadingSpace, IOSObjectArray *properties);

__attribute__((unused)) static JavaLangStringBuilder *OrgGreenrobotGreendaoQueryQueryBuilder_createSelectBuilder(OrgGreenrobotGreendaoQueryQueryBuilder *self);

__attribute__((unused)) static jint OrgGreenrobotGreendaoQueryQueryBuilder_checkAddLimitWithJavaLangStringBuilder_(OrgGreenrobotGreendaoQueryQueryBuilder *self, JavaLangStringBuilder *builder);

__attribute__((unused)) static jint OrgGreenrobotGreendaoQueryQueryBuilder_checkAddOffsetWithJavaLangStringBuilder_(OrgGreenrobotGreendaoQueryQueryBuilder *self, JavaLangStringBuilder *builder);

__attribute__((unused)) static void OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(OrgGreenrobotGreendaoQueryQueryBuilder *self, NSString *sql);

__attribute__((unused)) static void OrgGreenrobotGreendaoQueryQueryBuilder_appendJoinsAndWheresWithJavaLangStringBuilder_withNSString_(OrgGreenrobotGreendaoQueryQueryBuilder *self, JavaLangStringBuilder *builder, NSString *tablePrefixOrNull);

jboolean OrgGreenrobotGreendaoQueryQueryBuilder_LOG_SQL;
jboolean OrgGreenrobotGreendaoQueryQueryBuilder_LOG_VALUES;

@implementation OrgGreenrobotGreendaoQueryQueryBuilder

+ (OrgGreenrobotGreendaoQueryQueryBuilder *)internalCreateWithOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)dao {
  return OrgGreenrobotGreendaoQueryQueryBuilder_internalCreateWithOrgGreenrobotGreendaoAbstractDao_(dao);
}

- (instancetype)initWithOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)dao {
  OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_(self, dao);
  return self;
}

- (instancetype)initWithOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)dao
                                            withNSString:(NSString *)tablePrefix {
  OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_(self, dao, tablePrefix);
  return self;
}

- (void)checkOrderBuilder {
  OrgGreenrobotGreendaoQueryQueryBuilder_checkOrderBuilder(self);
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)distinct {
  distinct_ = true;
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)preferLocalizedStringOrder {
  if ([[((id<OrgGreenrobotGreendaoDatabaseDatabase>) nil_chk([((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getDatabase])) getRawDatabase] isKindOfClass:[AndroidDatabaseSqliteSQLiteDatabase class]]) {
    JreStrongAssign(&stringOrderCollation_, @" COLLATE LOCALIZED");
  }
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)stringOrderCollationWithNSString:(NSString *)stringOrderCollation {
  if ([[((id<OrgGreenrobotGreendaoDatabaseDatabase>) nil_chk([((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getDatabase])) getRawDatabase] isKindOfClass:[AndroidDatabaseSqliteSQLiteDatabase class]]) {
    JreStrongAssign(&self->stringOrderCollation_, stringOrderCollation == nil || [stringOrderCollation java_hasPrefix:@" "] ? stringOrderCollation : JreStrcat("C$", ' ', stringOrderCollation));
  }
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)whereWithOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond
                                            withOrgGreenrobotGreendaoQueryWhereConditionArray:(IOSObjectArray *)condMore {
  [((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(whereCollector_)) addWithOrgGreenrobotGreendaoQueryWhereCondition:cond withOrgGreenrobotGreendaoQueryWhereConditionArray:condMore];
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)whereOrWithOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond1
                                                   withOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond2
                                              withOrgGreenrobotGreendaoQueryWhereConditionArray:(IOSObjectArray *)condMore {
  [((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(whereCollector_)) addWithOrgGreenrobotGreendaoQueryWhereCondition:[self or__WithOrgGreenrobotGreendaoQueryWhereCondition:cond1 withOrgGreenrobotGreendaoQueryWhereCondition:cond2 withOrgGreenrobotGreendaoQueryWhereConditionArray:condMore] withOrgGreenrobotGreendaoQueryWhereConditionArray:[IOSObjectArray arrayWithLength:0 type:OrgGreenrobotGreendaoQueryWhereCondition_class_()]];
  return self;
}

- (id<OrgGreenrobotGreendaoQueryWhereCondition>)or__WithOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond1
                                                    withOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond2
                                               withOrgGreenrobotGreendaoQueryWhereConditionArray:(IOSObjectArray *)condMore {
  return [((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(whereCollector_)) combineWhereConditionsWithNSString:@" OR " withOrgGreenrobotGreendaoQueryWhereCondition:cond1 withOrgGreenrobotGreendaoQueryWhereCondition:cond2 withOrgGreenrobotGreendaoQueryWhereConditionArray:condMore];
}

- (id<OrgGreenrobotGreendaoQueryWhereCondition>)and__WithOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond1
                                                     withOrgGreenrobotGreendaoQueryWhereCondition:(id<OrgGreenrobotGreendaoQueryWhereCondition>)cond2
                                                withOrgGreenrobotGreendaoQueryWhereConditionArray:(IOSObjectArray *)condMore {
  return [((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(whereCollector_)) combineWhereConditionsWithNSString:@" AND " withOrgGreenrobotGreendaoQueryWhereCondition:cond1 withOrgGreenrobotGreendaoQueryWhereCondition:cond2 withOrgGreenrobotGreendaoQueryWhereConditionArray:condMore];
}

- (OrgGreenrobotGreendaoQueryJoin *)joinWithIOSClass:(IOSClass *)destinationEntityClass
                   withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)destinationProperty {
  return [self joinWithOrgGreenrobotGreendaoProperty:[((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getPkProperty] withIOSClass:destinationEntityClass withOrgGreenrobotGreendaoProperty:destinationProperty];
}

- (OrgGreenrobotGreendaoQueryJoin *)joinWithOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)sourceProperty
                                                             withIOSClass:(IOSClass *)destinationEntityClass {
  OrgGreenrobotGreendaoAbstractDao *destinationDao = [((OrgGreenrobotGreendaoAbstractDaoSession *) nil_chk([((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getSession])) getDaoWithIOSClass:destinationEntityClass];
  OrgGreenrobotGreendaoProperty *destinationProperty = [((OrgGreenrobotGreendaoAbstractDao *) nil_chk(destinationDao)) getPkProperty];
  return OrgGreenrobotGreendaoQueryQueryBuilder_addJoinWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_(self, tablePrefix_, sourceProperty, destinationDao, destinationProperty);
}

- (OrgGreenrobotGreendaoQueryJoin *)joinWithOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)sourceProperty
                                                             withIOSClass:(IOSClass *)destinationEntityClass
                                        withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)destinationProperty {
  OrgGreenrobotGreendaoAbstractDao *destinationDao = [((OrgGreenrobotGreendaoAbstractDaoSession *) nil_chk([((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getSession])) getDaoWithIOSClass:destinationEntityClass];
  return OrgGreenrobotGreendaoQueryQueryBuilder_addJoinWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_(self, tablePrefix_, sourceProperty, destinationDao, destinationProperty);
}

- (OrgGreenrobotGreendaoQueryJoin *)joinWithOrgGreenrobotGreendaoQueryJoin:(OrgGreenrobotGreendaoQueryJoin *)sourceJoin
                                         withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)sourceProperty
                                                              withIOSClass:(IOSClass *)destinationEntityClass
                                         withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)destinationProperty {
  OrgGreenrobotGreendaoAbstractDao *destinationDao = [((OrgGreenrobotGreendaoAbstractDaoSession *) nil_chk([((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getSession])) getDaoWithIOSClass:destinationEntityClass];
  return OrgGreenrobotGreendaoQueryQueryBuilder_addJoinWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_(self, ((OrgGreenrobotGreendaoQueryJoin *) nil_chk(sourceJoin))->tablePrefix_, sourceProperty, destinationDao, destinationProperty);
}

- (OrgGreenrobotGreendaoQueryJoin *)addJoinWithNSString:(NSString *)sourceTablePrefix
                      withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)sourceProperty
                   withOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)destinationDao
                      withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)destinationProperty {
  return OrgGreenrobotGreendaoQueryQueryBuilder_addJoinWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_(self, sourceTablePrefix, sourceProperty, destinationDao, destinationProperty);
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)orderAscWithOrgGreenrobotGreendaoPropertyArray:(IOSObjectArray *)properties {
  OrgGreenrobotGreendaoQueryQueryBuilder_orderAscOrDescWithNSString_withOrgGreenrobotGreendaoPropertyArray_(self, @" ASC", properties);
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)orderDescWithOrgGreenrobotGreendaoPropertyArray:(IOSObjectArray *)properties {
  OrgGreenrobotGreendaoQueryQueryBuilder_orderAscOrDescWithNSString_withOrgGreenrobotGreendaoPropertyArray_(self, @" DESC", properties);
  return self;
}

- (void)orderAscOrDescWithNSString:(NSString *)ascOrDescWithLeadingSpace
withOrgGreenrobotGreendaoPropertyArray:(IOSObjectArray *)properties {
  OrgGreenrobotGreendaoQueryQueryBuilder_orderAscOrDescWithNSString_withOrgGreenrobotGreendaoPropertyArray_(self, ascOrDescWithLeadingSpace, properties);
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)orderCustomWithOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)property
                                                                            withNSString:(NSString *)customOrderForProperty {
  OrgGreenrobotGreendaoQueryQueryBuilder_checkOrderBuilder(self);
  [((JavaLangStringBuilder *) nil_chk([self appendWithJavaLangStringBuilder:orderBuilder_ withOrgGreenrobotGreendaoProperty:property])) appendWithChar:' '];
  [((JavaLangStringBuilder *) nil_chk(orderBuilder_)) appendWithNSString:customOrderForProperty];
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)orderRawWithNSString:(NSString *)rawOrder {
  OrgGreenrobotGreendaoQueryQueryBuilder_checkOrderBuilder(self);
  [((JavaLangStringBuilder *) nil_chk(orderBuilder_)) appendWithNSString:rawOrder];
  return self;
}

- (JavaLangStringBuilder *)appendWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                         withOrgGreenrobotGreendaoProperty:(OrgGreenrobotGreendaoProperty *)property {
  [((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(whereCollector_)) checkPropertyWithOrgGreenrobotGreendaoProperty:property];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:tablePrefix_])) appendWithChar:'.'])) appendWithChar:'\''])) appendWithNSString:((OrgGreenrobotGreendaoProperty *) nil_chk(property))->columnName_])) appendWithChar:'\''];
  return builder;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)limitWithInt:(jint)limit {
  JreStrongAssign(&self->limit_, JavaLangInteger_valueOfWithInt_(limit));
  return self;
}

- (OrgGreenrobotGreendaoQueryQueryBuilder *)offsetWithInt:(jint)offset {
  JreStrongAssign(&self->offset_, JavaLangInteger_valueOfWithInt_(offset));
  return self;
}

- (OrgGreenrobotGreendaoQueryQuery *)build {
  JavaLangStringBuilder *builder = OrgGreenrobotGreendaoQueryQueryBuilder_createSelectBuilder(self);
  jint limitPosition = OrgGreenrobotGreendaoQueryQueryBuilder_checkAddLimitWithJavaLangStringBuilder_(self, builder);
  jint offsetPosition = OrgGreenrobotGreendaoQueryQueryBuilder_checkAddOffsetWithJavaLangStringBuilder_(self, builder);
  NSString *sql = [((JavaLangStringBuilder *) nil_chk(builder)) description];
  OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(self, sql);
  return OrgGreenrobotGreendaoQueryQuery_createWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSObjectArray_withInt_withInt_(dao_, sql, [((id<JavaUtilList>) nil_chk(values_)) toArray], limitPosition, offsetPosition);
}

- (OrgGreenrobotGreendaoQueryCursorQuery *)buildCursor {
  JavaLangStringBuilder *builder = OrgGreenrobotGreendaoQueryQueryBuilder_createSelectBuilder(self);
  jint limitPosition = OrgGreenrobotGreendaoQueryQueryBuilder_checkAddLimitWithJavaLangStringBuilder_(self, builder);
  jint offsetPosition = OrgGreenrobotGreendaoQueryQueryBuilder_checkAddOffsetWithJavaLangStringBuilder_(self, builder);
  NSString *sql = [((JavaLangStringBuilder *) nil_chk(builder)) description];
  OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(self, sql);
  return OrgGreenrobotGreendaoQueryCursorQuery_createWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSObjectArray_withInt_withInt_(dao_, sql, [((id<JavaUtilList>) nil_chk(values_)) toArray], limitPosition, offsetPosition);
}

- (JavaLangStringBuilder *)createSelectBuilder {
  return OrgGreenrobotGreendaoQueryQueryBuilder_createSelectBuilder(self);
}

- (jint)checkAddLimitWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder {
  return OrgGreenrobotGreendaoQueryQueryBuilder_checkAddLimitWithJavaLangStringBuilder_(self, builder);
}

- (jint)checkAddOffsetWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder {
  return OrgGreenrobotGreendaoQueryQueryBuilder_checkAddOffsetWithJavaLangStringBuilder_(self, builder);
}

- (OrgGreenrobotGreendaoQueryDeleteQuery *)buildDelete {
  if (![((id<JavaUtilList>) nil_chk(joins_)) isEmpty]) {
    @throw create_OrgGreenrobotGreendaoDaoException_initWithNSString_(@"JOINs are not supported for DELETE queries");
  }
  NSString *tablename = [((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getTablename];
  NSString *baseSql = OrgGreenrobotGreendaoInternalSqlUtils_createSqlDeleteWithNSString_withNSStringArray_(tablename, nil);
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithNSString_(baseSql);
  OrgGreenrobotGreendaoQueryQueryBuilder_appendJoinsAndWheresWithJavaLangStringBuilder_withNSString_(self, builder, tablePrefix_);
  NSString *sql = [builder description];
  sql = [((NSString *) nil_chk(sql)) java_replace:JreStrcat("$$", tablePrefix_, @".\"") withSequence:JreStrcat("C$$", '"', tablename, @"\".\"")];
  OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(self, sql);
  return OrgGreenrobotGreendaoQueryDeleteQuery_createWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSObjectArray_(dao_, sql, [((id<JavaUtilList>) nil_chk(values_)) toArray]);
}

- (OrgGreenrobotGreendaoQueryCountQuery *)buildCount {
  NSString *tablename = [((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getTablename];
  NSString *baseSql = OrgGreenrobotGreendaoInternalSqlUtils_createSqlSelectCountStarWithNSString_withNSString_(tablename, tablePrefix_);
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithNSString_(baseSql);
  OrgGreenrobotGreendaoQueryQueryBuilder_appendJoinsAndWheresWithJavaLangStringBuilder_withNSString_(self, builder, tablePrefix_);
  NSString *sql = [builder description];
  OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(self, sql);
  return OrgGreenrobotGreendaoQueryCountQuery_createWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSObjectArray_(dao_, sql, [((id<JavaUtilList>) nil_chk(values_)) toArray]);
}

- (void)checkLogWithNSString:(NSString *)sql {
  OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(self, sql);
}

- (void)appendJoinsAndWheresWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                         withNSString:(NSString *)tablePrefixOrNull {
  OrgGreenrobotGreendaoQueryQueryBuilder_appendJoinsAndWheresWithJavaLangStringBuilder_withNSString_(self, builder, tablePrefixOrNull);
}

- (id<JavaUtilList>)list {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) list];
}

- (OrgGreenrobotGreendaoRxRxQuery *)rx {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) __InternalRx];
}

- (OrgGreenrobotGreendaoRxRxQuery *)rxPlain {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) __internalRxPlain];
}

- (OrgGreenrobotGreendaoQueryLazyList *)listLazy {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) listLazy];
}

- (OrgGreenrobotGreendaoQueryLazyList *)listLazyUncached {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) listLazyUncached];
}

- (id<OrgGreenrobotGreendaoQueryCloseableListIterator>)listIterator {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) listIterator];
}

- (id)unique {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) unique];
}

- (id)uniqueOrThrow {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([self build])) uniqueOrThrow];
}

- (jlong)count {
  return [((OrgGreenrobotGreendaoQueryCountQuery *) nil_chk([self buildCount])) count];
}

- (void)dealloc {
  RELEASE_(whereCollector_);
  RELEASE_(orderBuilder_);
  RELEASE_(values_);
  RELEASE_(joins_);
  RELEASE_(dao_);
  RELEASE_(tablePrefix_);
  RELEASE_(limit_);
  RELEASE_(offset_);
  RELEASE_(stringOrderCollation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 3, -1, -1 },
    { NULL, NULL, 0x4, -1, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x81, 10, 11, -1, 12, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x81, 13, 14, -1, 15, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryWhereCondition;", 0x81, 16, 14, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryWhereCondition;", 0x81, 17, 14, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryJoin;", 0x1, 18, 19, -1, 20, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryJoin;", 0x1, 18, 21, -1, 22, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryJoin;", 0x1, 18, 23, -1, 24, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryJoin;", 0x1, 18, 25, -1, 26, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryJoin;", 0x2, 27, 28, -1, 29, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x81, 30, 31, -1, 32, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x81, 33, 31, -1, 32, -1, -1 },
    { NULL, "V", 0x82, 34, 35, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, 36, 37, -1, 38, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, 39, 8, -1, 9, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 40, 41, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, 42, 43, -1, 44, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQueryBuilder;", 0x1, 45, 43, -1, 44, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryQuery;", 0x1, -1, -1, -1, 46, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryCursorQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 47, 48, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 49, 48, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryDeleteQuery;", 0x1, -1, -1, -1, 50, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryCountQuery;", 0x1, -1, -1, -1, 51, -1, -1 },
    { NULL, "V", 0x2, 52, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 53, 54, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 55, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoRxRxQuery;", 0x1, -1, -1, -1, 56, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoRxRxQuery;", 0x1, -1, -1, -1, 56, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryLazyList;", 0x1, -1, -1, -1, 57, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryLazyList;", 0x1, -1, -1, -1, 57, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryCloseableListIterator;", 0x1, -1, -1, -1, 58, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 59, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 59, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(internalCreateWithOrgGreenrobotGreendaoAbstractDao:);
  methods[1].selector = @selector(initWithOrgGreenrobotGreendaoAbstractDao:);
  methods[2].selector = @selector(initWithOrgGreenrobotGreendaoAbstractDao:withNSString:);
  methods[3].selector = @selector(checkOrderBuilder);
  methods[4].selector = @selector(distinct);
  methods[5].selector = @selector(preferLocalizedStringOrder);
  methods[6].selector = @selector(stringOrderCollationWithNSString:);
  methods[7].selector = @selector(whereWithOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereConditionArray:);
  methods[8].selector = @selector(whereOrWithOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereConditionArray:);
  methods[9].selector = @selector(or__WithOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereConditionArray:);
  methods[10].selector = @selector(and__WithOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereCondition:withOrgGreenrobotGreendaoQueryWhereConditionArray:);
  methods[11].selector = @selector(joinWithIOSClass:withOrgGreenrobotGreendaoProperty:);
  methods[12].selector = @selector(joinWithOrgGreenrobotGreendaoProperty:withIOSClass:);
  methods[13].selector = @selector(joinWithOrgGreenrobotGreendaoProperty:withIOSClass:withOrgGreenrobotGreendaoProperty:);
  methods[14].selector = @selector(joinWithOrgGreenrobotGreendaoQueryJoin:withOrgGreenrobotGreendaoProperty:withIOSClass:withOrgGreenrobotGreendaoProperty:);
  methods[15].selector = @selector(addJoinWithNSString:withOrgGreenrobotGreendaoProperty:withOrgGreenrobotGreendaoAbstractDao:withOrgGreenrobotGreendaoProperty:);
  methods[16].selector = @selector(orderAscWithOrgGreenrobotGreendaoPropertyArray:);
  methods[17].selector = @selector(orderDescWithOrgGreenrobotGreendaoPropertyArray:);
  methods[18].selector = @selector(orderAscOrDescWithNSString:withOrgGreenrobotGreendaoPropertyArray:);
  methods[19].selector = @selector(orderCustomWithOrgGreenrobotGreendaoProperty:withNSString:);
  methods[20].selector = @selector(orderRawWithNSString:);
  methods[21].selector = @selector(appendWithJavaLangStringBuilder:withOrgGreenrobotGreendaoProperty:);
  methods[22].selector = @selector(limitWithInt:);
  methods[23].selector = @selector(offsetWithInt:);
  methods[24].selector = @selector(build);
  methods[25].selector = @selector(buildCursor);
  methods[26].selector = @selector(createSelectBuilder);
  methods[27].selector = @selector(checkAddLimitWithJavaLangStringBuilder:);
  methods[28].selector = @selector(checkAddOffsetWithJavaLangStringBuilder:);
  methods[29].selector = @selector(buildDelete);
  methods[30].selector = @selector(buildCount);
  methods[31].selector = @selector(checkLogWithNSString:);
  methods[32].selector = @selector(appendJoinsAndWheresWithJavaLangStringBuilder:withNSString:);
  methods[33].selector = @selector(list);
  methods[34].selector = @selector(rx);
  methods[35].selector = @selector(rxPlain);
  methods[36].selector = @selector(listLazy);
  methods[37].selector = @selector(listLazyUncached);
  methods[38].selector = @selector(listIterator);
  methods[39].selector = @selector(unique);
  methods[40].selector = @selector(uniqueOrThrow);
  methods[41].selector = @selector(count);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOG_SQL", "Z", .constantValue.asLong = 0, 0x9, -1, 60, -1, -1 },
    { "LOG_VALUES", "Z", .constantValue.asLong = 0, 0x9, -1, 61, -1, -1 },
    { "whereCollector_", "LOrgGreenrobotGreendaoQueryWhereCollector;", .constantValue.asLong = 0, 0x12, -1, -1, 62, -1 },
    { "orderBuilder_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "values_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 63, -1 },
    { "joins_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 64, -1 },
    { "dao_", "LOrgGreenrobotGreendaoAbstractDao;", .constantValue.asLong = 0, 0x12, -1, -1, 65, -1 },
    { "tablePrefix_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "limit_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offset_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "distinct_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "stringOrderCollation_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "internalCreate", "LOrgGreenrobotGreendaoAbstractDao;", "<T2:Ljava/lang/Object;>(Lorg/greenrobot/greendao/AbstractDao<TT2;*>;)Lorg/greenrobot/greendao/query/QueryBuilder<TT2;>;", "(Lorg/greenrobot/greendao/AbstractDao<TT;*>;)V", "LOrgGreenrobotGreendaoAbstractDao;LNSString;", "(Lorg/greenrobot/greendao/AbstractDao<TT;*>;Ljava/lang/String;)V", "()Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "stringOrderCollation", "LNSString;", "(Ljava/lang/String;)Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "where", "LOrgGreenrobotGreendaoQueryWhereCondition;[LOrgGreenrobotGreendaoQueryWhereCondition;", "(Lorg/greenrobot/greendao/query/WhereCondition;[Lorg/greenrobot/greendao/query/WhereCondition;)Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "whereOr", "LOrgGreenrobotGreendaoQueryWhereCondition;LOrgGreenrobotGreendaoQueryWhereCondition;[LOrgGreenrobotGreendaoQueryWhereCondition;", "(Lorg/greenrobot/greendao/query/WhereCondition;Lorg/greenrobot/greendao/query/WhereCondition;[Lorg/greenrobot/greendao/query/WhereCondition;)Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "or", "and", "join", "LIOSClass;LOrgGreenrobotGreendaoProperty;", "<J:Ljava/lang/Object;>(Ljava/lang/Class<TJ;>;Lorg/greenrobot/greendao/Property;)Lorg/greenrobot/greendao/query/Join<TT;TJ;>;", "LOrgGreenrobotGreendaoProperty;LIOSClass;", "<J:Ljava/lang/Object;>(Lorg/greenrobot/greendao/Property;Ljava/lang/Class<TJ;>;)Lorg/greenrobot/greendao/query/Join<TT;TJ;>;", "LOrgGreenrobotGreendaoProperty;LIOSClass;LOrgGreenrobotGreendaoProperty;", "<J:Ljava/lang/Object;>(Lorg/greenrobot/greendao/Property;Ljava/lang/Class<TJ;>;Lorg/greenrobot/greendao/Property;)Lorg/greenrobot/greendao/query/Join<TT;TJ;>;", "LOrgGreenrobotGreendaoQueryJoin;LOrgGreenrobotGreendaoProperty;LIOSClass;LOrgGreenrobotGreendaoProperty;", "<J:Ljava/lang/Object;>(Lorg/greenrobot/greendao/query/Join<*TT;>;Lorg/greenrobot/greendao/Property;Ljava/lang/Class<TJ;>;Lorg/greenrobot/greendao/Property;)Lorg/greenrobot/greendao/query/Join<TT;TJ;>;", "addJoin", "LNSString;LOrgGreenrobotGreendaoProperty;LOrgGreenrobotGreendaoAbstractDao;LOrgGreenrobotGreendaoProperty;", "<J:Ljava/lang/Object;>(Ljava/lang/String;Lorg/greenrobot/greendao/Property;Lorg/greenrobot/greendao/AbstractDao<TJ;*>;Lorg/greenrobot/greendao/Property;)Lorg/greenrobot/greendao/query/Join<TT;TJ;>;", "orderAsc", "[LOrgGreenrobotGreendaoProperty;", "([Lorg/greenrobot/greendao/Property;)Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "orderDesc", "orderAscOrDesc", "LNSString;[LOrgGreenrobotGreendaoProperty;", "orderCustom", "LOrgGreenrobotGreendaoProperty;LNSString;", "(Lorg/greenrobot/greendao/Property;Ljava/lang/String;)Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "orderRaw", "append", "LJavaLangStringBuilder;LOrgGreenrobotGreendaoProperty;", "limit", "I", "(I)Lorg/greenrobot/greendao/query/QueryBuilder<TT;>;", "offset", "()Lorg/greenrobot/greendao/query/Query<TT;>;", "checkAddLimit", "LJavaLangStringBuilder;", "checkAddOffset", "()Lorg/greenrobot/greendao/query/DeleteQuery<TT;>;", "()Lorg/greenrobot/greendao/query/CountQuery<TT;>;", "checkLog", "appendJoinsAndWheres", "LJavaLangStringBuilder;LNSString;", "()Ljava/util/List<TT;>;", "()Lorg/greenrobot/greendao/rx/RxQuery<TT;>;", "()Lorg/greenrobot/greendao/query/LazyList<TT;>;", "()Lorg/greenrobot/greendao/query/CloseableListIterator<TT;>;", "()TT;", &OrgGreenrobotGreendaoQueryQueryBuilder_LOG_SQL, &OrgGreenrobotGreendaoQueryQueryBuilder_LOG_VALUES, "Lorg/greenrobot/greendao/query/WhereCollector<TT;>;", "Ljava/util/List<Ljava/lang/Object;>;", "Ljava/util/List<Lorg/greenrobot/greendao/query/Join<TT;*>;>;", "Lorg/greenrobot/greendao/AbstractDao<TT;*>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoQueryQueryBuilder = { "QueryBuilder", "org.greenrobot.greendao.query", ptrTable, methods, fields, 7, 0x1, 42, 12, -1, -1, -1, 66, -1 };
  return &_OrgGreenrobotGreendaoQueryQueryBuilder;
}

@end

OrgGreenrobotGreendaoQueryQueryBuilder *OrgGreenrobotGreendaoQueryQueryBuilder_internalCreateWithOrgGreenrobotGreendaoAbstractDao_(OrgGreenrobotGreendaoAbstractDao *dao) {
  OrgGreenrobotGreendaoQueryQueryBuilder_initialize();
  return create_OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_(dao);
}

void OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_(OrgGreenrobotGreendaoQueryQueryBuilder *self, OrgGreenrobotGreendaoAbstractDao *dao) {
  OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_(self, dao, @"T");
}

OrgGreenrobotGreendaoQueryQueryBuilder *new_OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_(OrgGreenrobotGreendaoAbstractDao *dao) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoQueryQueryBuilder, initWithOrgGreenrobotGreendaoAbstractDao_, dao)
}

OrgGreenrobotGreendaoQueryQueryBuilder *create_OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_(OrgGreenrobotGreendaoAbstractDao *dao) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoQueryQueryBuilder, initWithOrgGreenrobotGreendaoAbstractDao_, dao)
}

void OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_(OrgGreenrobotGreendaoQueryQueryBuilder *self, OrgGreenrobotGreendaoAbstractDao *dao, NSString *tablePrefix) {
  NSObject_init(self);
  JreStrongAssign(&self->dao_, dao);
  JreStrongAssign(&self->tablePrefix_, tablePrefix);
  JreStrongAssignAndConsume(&self->values_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->joins_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->whereCollector_, new_OrgGreenrobotGreendaoQueryWhereCollector_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_(dao, tablePrefix));
  JreStrongAssign(&self->stringOrderCollation_, @" COLLATE NOCASE");
}

OrgGreenrobotGreendaoQueryQueryBuilder *new_OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_(OrgGreenrobotGreendaoAbstractDao *dao, NSString *tablePrefix) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoQueryQueryBuilder, initWithOrgGreenrobotGreendaoAbstractDao_withNSString_, dao, tablePrefix)
}

OrgGreenrobotGreendaoQueryQueryBuilder *create_OrgGreenrobotGreendaoQueryQueryBuilder_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_(OrgGreenrobotGreendaoAbstractDao *dao, NSString *tablePrefix) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoQueryQueryBuilder, initWithOrgGreenrobotGreendaoAbstractDao_withNSString_, dao, tablePrefix)
}

void OrgGreenrobotGreendaoQueryQueryBuilder_checkOrderBuilder(OrgGreenrobotGreendaoQueryQueryBuilder *self) {
  if (self->orderBuilder_ == nil) {
    JreStrongAssignAndConsume(&self->orderBuilder_, new_JavaLangStringBuilder_init());
  }
  else if ([self->orderBuilder_ java_length] > 0) {
    [((JavaLangStringBuilder *) nil_chk(self->orderBuilder_)) appendWithNSString:@","];
  }
}

OrgGreenrobotGreendaoQueryJoin *OrgGreenrobotGreendaoQueryQueryBuilder_addJoinWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_(OrgGreenrobotGreendaoQueryQueryBuilder *self, NSString *sourceTablePrefix, OrgGreenrobotGreendaoProperty *sourceProperty, OrgGreenrobotGreendaoAbstractDao *destinationDao, OrgGreenrobotGreendaoProperty *destinationProperty) {
  NSString *joinTablePrefix = JreStrcat("CI", 'J', ([((id<JavaUtilList>) nil_chk(self->joins_)) size] + 1));
  OrgGreenrobotGreendaoQueryJoin *join = create_OrgGreenrobotGreendaoQueryJoin_initWithNSString_withOrgGreenrobotGreendaoProperty_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoProperty_withNSString_(sourceTablePrefix, sourceProperty, destinationDao, destinationProperty, joinTablePrefix);
  [self->joins_ addWithId:join];
  return join;
}

void OrgGreenrobotGreendaoQueryQueryBuilder_orderAscOrDescWithNSString_withOrgGreenrobotGreendaoPropertyArray_(OrgGreenrobotGreendaoQueryQueryBuilder *self, NSString *ascOrDescWithLeadingSpace, IOSObjectArray *properties) {
  {
    IOSObjectArray *a__ = properties;
    OrgGreenrobotGreendaoProperty * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGreenrobotGreendaoProperty * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGreenrobotGreendaoProperty *property = *b__++;
      OrgGreenrobotGreendaoQueryQueryBuilder_checkOrderBuilder(self);
      [self appendWithJavaLangStringBuilder:self->orderBuilder_ withOrgGreenrobotGreendaoProperty:property];
      if ([NSString_class_() isEqual:((OrgGreenrobotGreendaoProperty *) nil_chk(property))->type_] && self->stringOrderCollation_ != nil) {
        [((JavaLangStringBuilder *) nil_chk(self->orderBuilder_)) appendWithNSString:self->stringOrderCollation_];
      }
      [((JavaLangStringBuilder *) nil_chk(self->orderBuilder_)) appendWithNSString:ascOrDescWithLeadingSpace];
    }
  }
}

JavaLangStringBuilder *OrgGreenrobotGreendaoQueryQueryBuilder_createSelectBuilder(OrgGreenrobotGreendaoQueryQueryBuilder *self) {
  NSString *select = OrgGreenrobotGreendaoInternalSqlUtils_createSqlSelectWithNSString_withNSString_withNSStringArray_withBoolean_([((OrgGreenrobotGreendaoAbstractDao *) nil_chk(self->dao_)) getTablename], self->tablePrefix_, [self->dao_ getAllColumns], self->distinct_);
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithNSString_(select);
  OrgGreenrobotGreendaoQueryQueryBuilder_appendJoinsAndWheresWithJavaLangStringBuilder_withNSString_(self, builder, self->tablePrefix_);
  if (self->orderBuilder_ != nil && [self->orderBuilder_ java_length] > 0) {
    [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@" ORDER BY "])) appendWithJavaLangCharSequence:self->orderBuilder_];
  }
  return builder;
}

jint OrgGreenrobotGreendaoQueryQueryBuilder_checkAddLimitWithJavaLangStringBuilder_(OrgGreenrobotGreendaoQueryQueryBuilder *self, JavaLangStringBuilder *builder) {
  jint limitPosition = -1;
  if (self->limit_ != nil) {
    [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@" LIMIT ?"];
    [((id<JavaUtilList>) nil_chk(self->values_)) addWithId:self->limit_];
    limitPosition = [self->values_ size] - 1;
  }
  return limitPosition;
}

jint OrgGreenrobotGreendaoQueryQueryBuilder_checkAddOffsetWithJavaLangStringBuilder_(OrgGreenrobotGreendaoQueryQueryBuilder *self, JavaLangStringBuilder *builder) {
  jint offsetPosition = -1;
  if (self->offset_ != nil) {
    if (self->limit_ == nil) {
      @throw create_JavaLangIllegalStateException_initWithNSString_(@"Offset cannot be set without limit");
    }
    [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@" OFFSET ?"];
    [((id<JavaUtilList>) nil_chk(self->values_)) addWithId:self->offset_];
    offsetPosition = [self->values_ size] - 1;
  }
  return offsetPosition;
}

void OrgGreenrobotGreendaoQueryQueryBuilder_checkLogWithNSString_(OrgGreenrobotGreendaoQueryQueryBuilder *self, NSString *sql) {
  if (OrgGreenrobotGreendaoQueryQueryBuilder_LOG_SQL) {
    OrgGreenrobotGreendaoDaoLog_dWithNSString_(JreStrcat("$$", @"Built SQL for query: ", sql));
  }
  if (OrgGreenrobotGreendaoQueryQueryBuilder_LOG_VALUES) {
    OrgGreenrobotGreendaoDaoLog_dWithNSString_(JreStrcat("$@", @"Values for query: ", self->values_));
  }
}

void OrgGreenrobotGreendaoQueryQueryBuilder_appendJoinsAndWheresWithJavaLangStringBuilder_withNSString_(OrgGreenrobotGreendaoQueryQueryBuilder *self, JavaLangStringBuilder *builder, NSString *tablePrefixOrNull) {
  [((id<JavaUtilList>) nil_chk(self->values_)) clear];
  for (OrgGreenrobotGreendaoQueryJoin * __strong join in nil_chk(self->joins_)) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@" JOIN "])) appendWithNSString:[((OrgGreenrobotGreendaoAbstractDao *) nil_chk(((OrgGreenrobotGreendaoQueryJoin *) nil_chk(join))->daoDestination_)) getTablename]])) appendWithChar:' '];
    [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:join->tablePrefix_])) appendWithNSString:@" ON "];
    [((JavaLangStringBuilder *) nil_chk(OrgGreenrobotGreendaoInternalSqlUtils_appendPropertyWithJavaLangStringBuilder_withNSString_withOrgGreenrobotGreendaoProperty_(builder, join->sourceTablePrefix_, join->joinPropertySource_))) appendWithChar:'='];
    OrgGreenrobotGreendaoInternalSqlUtils_appendPropertyWithJavaLangStringBuilder_withNSString_withOrgGreenrobotGreendaoProperty_(builder, join->tablePrefix_, join->joinPropertyDestination_);
  }
  jboolean whereAppended = ![((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(self->whereCollector_)) isEmpty];
  if (whereAppended) {
    [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@" WHERE "];
    [self->whereCollector_ appendWhereClauseWithJavaLangStringBuilder:builder withNSString:tablePrefixOrNull withJavaUtilList:self->values_];
  }
  for (OrgGreenrobotGreendaoQueryJoin * __strong join in self->joins_) {
    if (![((OrgGreenrobotGreendaoQueryWhereCollector *) nil_chk(((OrgGreenrobotGreendaoQueryJoin *) nil_chk(join))->whereCollector_)) isEmpty]) {
      if (!whereAppended) {
        [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@" WHERE "];
        whereAppended = true;
      }
      else {
        [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@" AND "];
      }
      [join->whereCollector_ appendWhereClauseWithJavaLangStringBuilder:builder withNSString:join->tablePrefix_ withJavaUtilList:self->values_];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGreenrobotGreendaoQueryQueryBuilder)

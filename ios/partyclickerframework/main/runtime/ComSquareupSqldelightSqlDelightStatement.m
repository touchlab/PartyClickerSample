//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComSquareupSqldelightSqlDelightStatement.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Set.h"

@implementation ComSquareupSqldelightSqlDelightStatement

- (instancetype)initWithNSString:(NSString *)statement
               withNSStringArray:(IOSObjectArray *)args
                 withJavaUtilSet:(id<JavaUtilSet>)tables {
  ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_(self, statement, args, tables);
  return self;
}

- (void)dealloc {
  RELEASE_(statement_);
  RELEASE_(args_);
  RELEASE_(tables_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSStringArray:withJavaUtilSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "statement_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "args_", "[LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "tables_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x11, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSString;LJavaUtilSet;", "(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;)V", "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComSquareupSqldelightSqlDelightStatement = { "SqlDelightStatement", "com.squareup.sqldelight", ptrTable, methods, fields, 7, 0x1, 1, 3, -1, -1, -1, -1, -1 };
  return &_ComSquareupSqldelightSqlDelightStatement;
}

@end

void ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_(ComSquareupSqldelightSqlDelightStatement *self, NSString *statement, IOSObjectArray *args, id<JavaUtilSet> tables) {
  NSObject_init(self);
  JreStrongAssign(&self->statement_, statement);
  JreStrongAssign(&self->args_, args);
  JreStrongAssign(&self->tables_, tables);
}

ComSquareupSqldelightSqlDelightStatement *new_ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_(NSString *statement, IOSObjectArray *args, id<JavaUtilSet> tables) {
  J2OBJC_NEW_IMPL(ComSquareupSqldelightSqlDelightStatement, initWithNSString_withNSStringArray_withJavaUtilSet_, statement, args, tables)
}

ComSquareupSqldelightSqlDelightStatement *create_ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_(NSString *statement, IOSObjectArray *args, id<JavaUtilSet> tables) {
  J2OBJC_CREATE_IMPL(ComSquareupSqldelightSqlDelightStatement, initWithNSString_withNSStringArray_withJavaUtilSet_, statement, args, tables)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupSqldelightSqlDelightStatement)

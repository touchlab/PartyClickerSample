//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContentValues.h"
#include "AndroidDatabaseCursor.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "AndroidDatabaseSqliteSQLiteStatement.h"
#include "ComSquareupSqldelightRowMapper.h"
#include "ComSquareupSqldelightSqlDelightCompiledStatement.h"
#include "ComSquareupSqldelightSqlDelightStatement.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PDPersonModel.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Set.h"

@interface PDPersonModel : NSObject

@end

@interface PDPersonModel_Creator : NSObject

@end

@interface PDPersonModel_Mapper () {
 @public
  PDPersonModel_Factory *personModelFactory_;
}

@end

J2OBJC_FIELD_SETTER(PDPersonModel_Mapper, personModelFactory_, PDPersonModel_Factory *)

__attribute__((unused)) static IOSObjectArray *PDPersonModel_Factory__Annotations$0();

__attribute__((unused)) static IOSObjectArray *PDPersonModel_Factory__Annotations$1();

__attribute__((unused)) static IOSObjectArray *PDPersonModel_Factory__Annotations$2();

@interface PDPersonModel_Factory_1 : NSObject < ComSquareupSqldelightRowMapper >

- (instancetype)init;

- (JavaLangLong *)mapWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;

@end

J2OBJC_EMPTY_STATIC_INIT(PDPersonModel_Factory_1)

__attribute__((unused)) static void PDPersonModel_Factory_1_init(PDPersonModel_Factory_1 *self);

__attribute__((unused)) static PDPersonModel_Factory_1 *new_PDPersonModel_Factory_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static PDPersonModel_Factory_1 *create_PDPersonModel_Factory_1_init();

NSString *PDPersonModel_TABLE_NAME = @"person";
NSString *PDPersonModel_ID = @"id";
NSString *PDPersonModel_RECORDED = @"recorded";
NSString *PDPersonModel_VAL = @"val";
NSString *PDPersonModel_PARTY = @"party";
NSString *PDPersonModel_CREATE_TABLE = @"CREATE TABLE person (\n    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    recorded INTEGER NOT NULL,\n    val INTEGER NOT NULL,\n    party INTEGER NOT NULL,\n    FOREIGN KEY (party) REFERENCES party(id)\n)";

@implementation PDPersonModel

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "J", 0x401, 0, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(id__);
  methods[1].selector = @selector(recorded);
  methods[2].selector = @selector(val);
  methods[3].selector = @selector(party);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TABLE_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "RECORDED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "VAL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "PARTY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "CREATE_TABLE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "id", &PDPersonModel_TABLE_NAME, &PDPersonModel_ID, &PDPersonModel_RECORDED, &PDPersonModel_VAL, &PDPersonModel_PARTY, &PDPersonModel_CREATE_TABLE, "LPDPersonModel_Creator;LPDPersonModel_Mapper;LPDPersonModel_Marshal;LPDPersonModel_Factory;LPDPersonModel_CreatePerson;" };
  static const J2ObjcClassInfo _PDPersonModel = { "PersonModel", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x609, 4, 6, -1, 7, -1, -1, -1 };
  return &_PDPersonModel;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(PDPersonModel)

@implementation PDPersonModel_Creator

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LPDPersonModel;", 0x401, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithLong:withLong:withLong:withLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "JJJJ", "(JJJJ)TT;", "LPDPersonModel;", "<T::Lcom/kgalligan/partyclicker/data/PersonModel;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _PDPersonModel_Creator = { "Creator", "com.kgalligan.partyclicker.data", ptrTable, methods, NULL, 7, 0x609, 1, 0, 3, -1, -1, 4, -1 };
  return &_PDPersonModel_Creator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(PDPersonModel_Creator)

@implementation PDPersonModel_Mapper

- (instancetype)initWithPDPersonModel_Factory:(PDPersonModel_Factory *)personModelFactory {
  PDPersonModel_Mapper_initWithPDPersonModel_Factory_(self, personModelFactory);
  return self;
}

- (id<PDPersonModel>)mapWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
  return [((id<PDPersonModel_Creator>) nil_chk(((PDPersonModel_Factory *) nil_chk(personModelFactory_))->creator_)) createWithLong:[((id<AndroidDatabaseCursor>) nil_chk(cursor)) getLongWithInt:0] withLong:[cursor getLongWithInt:1] withLong:[cursor getLongWithInt:2] withLong:[cursor getLongWithInt:3]];
}

- (void)dealloc {
  RELEASE_(personModelFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LPDPersonModel;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithPDPersonModel_Factory:);
  methods[1].selector = @selector(mapWithAndroidDatabaseCursor:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "personModelFactory_", "LPDPersonModel_Factory;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LPDPersonModel_Factory;", "(Lcom/kgalligan/partyclicker/data/PersonModel$Factory<TT;>;)V", "map", "LAndroidDatabaseCursor;", "(Landroid/database/Cursor;)TT;", "Lcom/kgalligan/partyclicker/data/PersonModel$Factory<TT;>;", "LPDPersonModel;", "<T::Lcom/kgalligan/partyclicker/data/PersonModel;>Ljava/lang/Object;Lcom/squareup/sqldelight/RowMapper<TT;>;" };
  static const J2ObjcClassInfo _PDPersonModel_Mapper = { "Mapper", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x19, 2, 1, 6, -1, -1, 7, -1 };
  return &_PDPersonModel_Mapper;
}

@end

void PDPersonModel_Mapper_initWithPDPersonModel_Factory_(PDPersonModel_Mapper *self, PDPersonModel_Factory *personModelFactory) {
  NSObject_init(self);
  JreStrongAssign(&self->personModelFactory_, personModelFactory);
}

PDPersonModel_Mapper *new_PDPersonModel_Mapper_initWithPDPersonModel_Factory_(PDPersonModel_Factory *personModelFactory) {
  J2OBJC_NEW_IMPL(PDPersonModel_Mapper, initWithPDPersonModel_Factory_, personModelFactory)
}

PDPersonModel_Mapper *create_PDPersonModel_Mapper_initWithPDPersonModel_Factory_(PDPersonModel_Factory *personModelFactory) {
  J2OBJC_CREATE_IMPL(PDPersonModel_Mapper, initWithPDPersonModel_Factory_, personModelFactory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDPersonModel_Mapper)

@implementation PDPersonModel_Marshal

- (instancetype)initWithPDPersonModel:(id<PDPersonModel>)copy_ {
  PDPersonModel_Marshal_initWithPDPersonModel_(self, copy_);
  return self;
}

- (AndroidContentContentValues *)asContentValues {
  return contentValues_;
}

- (PDPersonModel_Marshal *)id__WithLong:(jlong)id_ {
  [((AndroidContentContentValues *) nil_chk(contentValues_)) putWithNSString:@"id" withJavaLangLong:JavaLangLong_valueOfWithLong_(id_)];
  return self;
}

- (PDPersonModel_Marshal *)recordedWithLong:(jlong)recorded {
  [((AndroidContentContentValues *) nil_chk(contentValues_)) putWithNSString:@"recorded" withJavaLangLong:JavaLangLong_valueOfWithLong_(recorded)];
  return self;
}

- (PDPersonModel_Marshal *)valWithLong:(jlong)val {
  [((AndroidContentContentValues *) nil_chk(contentValues_)) putWithNSString:@"val" withJavaLangLong:JavaLangLong_valueOfWithLong_(val)];
  return self;
}

- (PDPersonModel_Marshal *)partyWithLong:(jlong)party {
  [((AndroidContentContentValues *) nil_chk(contentValues_)) putWithNSString:@"party" withJavaLangLong:JavaLangLong_valueOfWithLong_(party)];
  return self;
}

- (void)dealloc {
  RELEASE_(contentValues_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidContentContentValues;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LPDPersonModel_Marshal;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LPDPersonModel_Marshal;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LPDPersonModel_Marshal;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LPDPersonModel_Marshal;", 0x1, 5, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithPDPersonModel:);
  methods[1].selector = @selector(asContentValues);
  methods[2].selector = @selector(id__WithLong:);
  methods[3].selector = @selector(recordedWithLong:);
  methods[4].selector = @selector(valWithLong:);
  methods[5].selector = @selector(partyWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "contentValues_", "LAndroidContentContentValues;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LPDPersonModel;", "id", "J", "recorded", "val", "party" };
  static const J2ObjcClassInfo _PDPersonModel_Marshal = { "Marshal", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x19, 6, 1, 0, -1, -1, -1, -1 };
  return &_PDPersonModel_Marshal;
}

@end

void PDPersonModel_Marshal_initWithPDPersonModel_(PDPersonModel_Marshal *self, id<PDPersonModel> copy_) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->contentValues_, new_AndroidContentContentValues_init());
  if (copy_ != nil) {
    [self id__WithLong:[copy_ id__]];
    [self recordedWithLong:[copy_ recorded]];
    [self valWithLong:[copy_ val]];
    [self partyWithLong:[copy_ party]];
  }
}

PDPersonModel_Marshal *new_PDPersonModel_Marshal_initWithPDPersonModel_(id<PDPersonModel> copy_) {
  J2OBJC_NEW_IMPL(PDPersonModel_Marshal, initWithPDPersonModel_, copy_)
}

PDPersonModel_Marshal *create_PDPersonModel_Marshal_initWithPDPersonModel_(id<PDPersonModel> copy_) {
  J2OBJC_CREATE_IMPL(PDPersonModel_Marshal, initWithPDPersonModel_, copy_)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDPersonModel_Marshal)

@implementation PDPersonModel_Factory

- (instancetype)initWithPDPersonModel_Creator:(id<PDPersonModel_Creator>)creator {
  PDPersonModel_Factory_initWithPDPersonModel_Creator_(self, creator);
  return self;
}

- (PDPersonModel_Marshal *)marshal {
  return create_PDPersonModel_Marshal_initWithPDPersonModel_(nil);
}

- (PDPersonModel_Marshal *)marshalWithPDPersonModel:(id<PDPersonModel>)copy_ {
  return create_PDPersonModel_Marshal_initWithPDPersonModel_(copy_);
}

- (ComSquareupSqldelightSqlDelightStatement *)selectAll {
  return create_ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_(@"SELECT * FROM person", [IOSObjectArray arrayWithLength:0 type:NSString_class_()], JavaUtilCollections_singletonWithId_(@"person"));
}

- (ComSquareupSqldelightSqlDelightStatement *)selectAllForPartyWithLong:(jlong)party {
  id<JavaUtilList> args = create_JavaUtilArrayList_init();
  jint currentIndex = 1;
  JavaLangStringBuilder *query = create_JavaLangStringBuilder_init();
  [query appendWithNSString:@"SELECT * FROM person where party = "];
  [query appendWithLong:party];
  return create_ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_([query description], [args toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[args size] type:NSString_class_()]], JavaUtilCollections_singletonWithId_(@"person"));
}

- (ComSquareupSqldelightSqlDelightStatement *)countPartyWithLong:(jlong)party {
  id<JavaUtilList> args = create_JavaUtilArrayList_init();
  jint currentIndex = 1;
  JavaLangStringBuilder *query = create_JavaLangStringBuilder_init();
  [query appendWithNSString:@"SELECT SUM(val) FROM person WHERE party = "];
  [query appendWithLong:party];
  return create_ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_([query description], [args toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[args size] type:NSString_class_()]], JavaUtilCollections_singletonWithId_(@"person"));
}

- (ComSquareupSqldelightSqlDelightStatement *)createPersonWithLong:(jlong)recorded
                                                          withLong:(jlong)val
                                                          withLong:(jlong)party {
  id<JavaUtilList> args = create_JavaUtilArrayList_init();
  jint currentIndex = 1;
  JavaLangStringBuilder *query = create_JavaLangStringBuilder_init();
  [query appendWithNSString:@"INSERT INTO person(recorded, val, party)VALUES ("];
  [query appendWithLong:recorded];
  [query appendWithNSString:@", "];
  [query appendWithLong:val];
  [query appendWithNSString:@", "];
  [query appendWithLong:party];
  [query appendWithNSString:@")"];
  return create_ComSquareupSqldelightSqlDelightStatement_initWithNSString_withNSStringArray_withJavaUtilSet_([query description], [args toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[args size] type:NSString_class_()]], JavaUtilCollections_singletonWithId_(@"person"));
}

- (PDPersonModel_Mapper *)selectAllMapper {
  return create_PDPersonModel_Mapper_initWithPDPersonModel_Factory_(self);
}

- (PDPersonModel_Mapper *)selectAllForPartyMapper {
  return create_PDPersonModel_Mapper_initWithPDPersonModel_Factory_(self);
}

- (id<ComSquareupSqldelightRowMapper>)countPartyMapper {
  return create_PDPersonModel_Factory_1_init();
}

- (void)dealloc {
  RELEASE_(creator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LPDPersonModel_Marshal;", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "LPDPersonModel_Marshal;", 0x1, 3, 4, -1, -1, 5, -1 },
    { NULL, "LComSquareupSqldelightSqlDelightStatement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupSqldelightSqlDelightStatement;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComSquareupSqldelightSqlDelightStatement;", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LComSquareupSqldelightSqlDelightStatement;", 0x1, 9, 10, -1, -1, 11, -1 },
    { NULL, "LPDPersonModel_Mapper;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LPDPersonModel_Mapper;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LComSquareupSqldelightRowMapper;", 0x1, -1, -1, -1, 13, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithPDPersonModel_Creator:);
  methods[1].selector = @selector(marshal);
  methods[2].selector = @selector(marshalWithPDPersonModel:);
  methods[3].selector = @selector(selectAll);
  methods[4].selector = @selector(selectAllForPartyWithLong:);
  methods[5].selector = @selector(countPartyWithLong:);
  methods[6].selector = @selector(createPersonWithLong:withLong:withLong:);
  methods[7].selector = @selector(selectAllMapper);
  methods[8].selector = @selector(selectAllForPartyMapper);
  methods[9].selector = @selector(countPartyMapper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "creator_", "LPDPersonModel_Creator;", .constantValue.asLong = 0, 0x11, -1, -1, 14, -1 },
  };
  static const void *ptrTable[] = { "LPDPersonModel_Creator;", "(Lcom/kgalligan/partyclicker/data/PersonModel$Creator<TT;>;)V", (void *)&PDPersonModel_Factory__Annotations$0, "marshal", "LPDPersonModel;", (void *)&PDPersonModel_Factory__Annotations$1, "selectAllForParty", "J", "countParty", "createPerson", "JJJ", (void *)&PDPersonModel_Factory__Annotations$2, "()Lcom/kgalligan/partyclicker/data/PersonModel$Mapper<TT;>;", "()Lcom/squareup/sqldelight/RowMapper<Ljava/lang/Long;>;", "Lcom/kgalligan/partyclicker/data/PersonModel$Creator<TT;>;", "<T::Lcom/kgalligan/partyclicker/data/PersonModel;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _PDPersonModel_Factory = { "Factory", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x19, 10, 1, 4, -1, -1, 15, -1 };
  return &_PDPersonModel_Factory;
}

@end

void PDPersonModel_Factory_initWithPDPersonModel_Creator_(PDPersonModel_Factory *self, id<PDPersonModel_Creator> creator) {
  NSObject_init(self);
  JreStrongAssign(&self->creator_, creator);
}

PDPersonModel_Factory *new_PDPersonModel_Factory_initWithPDPersonModel_Creator_(id<PDPersonModel_Creator> creator) {
  J2OBJC_NEW_IMPL(PDPersonModel_Factory, initWithPDPersonModel_Creator_, creator)
}

PDPersonModel_Factory *create_PDPersonModel_Factory_initWithPDPersonModel_Creator_(id<PDPersonModel_Creator> creator) {
  J2OBJC_CREATE_IMPL(PDPersonModel_Factory, initWithPDPersonModel_Creator_, creator)
}

IOSObjectArray *PDPersonModel_Factory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *PDPersonModel_Factory__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *PDPersonModel_Factory__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDPersonModel_Factory)

@implementation PDPersonModel_Factory_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PDPersonModel_Factory_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangLong *)mapWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
  return JavaLangLong_valueOfWithLong_([((id<AndroidDatabaseCursor>) nil_chk(cursor)) getLongWithInt:0]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mapWithAndroidDatabaseCursor:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "map", "LAndroidDatabaseCursor;", "LPDPersonModel_Factory;", "countPartyMapper", "Ljava/lang/Object;Lcom/squareup/sqldelight/RowMapper<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _PDPersonModel_Factory_1 = { "", "com.kgalligan.partyclicker.data", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_PDPersonModel_Factory_1;
}

@end

void PDPersonModel_Factory_1_init(PDPersonModel_Factory_1 *self) {
  NSObject_init(self);
}

PDPersonModel_Factory_1 *new_PDPersonModel_Factory_1_init() {
  J2OBJC_NEW_IMPL(PDPersonModel_Factory_1, init)
}

PDPersonModel_Factory_1 *create_PDPersonModel_Factory_1_init() {
  J2OBJC_CREATE_IMPL(PDPersonModel_Factory_1, init)
}

@implementation PDPersonModel_CreatePerson

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)database {
  PDPersonModel_CreatePerson_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, database);
  return self;
}

- (void)bindWithLong:(jlong)recorded
            withLong:(jlong)val
            withLong:(jlong)party {
  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(program_)) bindLongWithInt:1 withLong:recorded];
  [program_ bindLongWithInt:2 withLong:val];
  [program_ bindLongWithInt:3 withLong:party];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[1].selector = @selector(bindWithLong:withLong:withLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;", "bind", "JJJ", "LPDPersonModel;" };
  static const J2ObjcClassInfo _PDPersonModel_CreatePerson = { "CreatePerson", "com.kgalligan.partyclicker.data", ptrTable, methods, NULL, 7, 0x19, 2, 0, 3, -1, -1, -1, -1 };
  return &_PDPersonModel_CreatePerson;
}

@end

void PDPersonModel_CreatePerson_initWithAndroidDatabaseSqliteSQLiteDatabase_(PDPersonModel_CreatePerson *self, AndroidDatabaseSqliteSQLiteDatabase *database) {
  ComSquareupSqldelightSqlDelightCompiledStatement_Insert_initWithNSString_withAndroidDatabaseSqliteSQLiteStatement_(self, @"person", [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(database)) compileStatementWithNSString:@"INSERT INTO person(recorded, val, party)VALUES (?, ?, ?)"]);
}

PDPersonModel_CreatePerson *new_PDPersonModel_CreatePerson_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *database) {
  J2OBJC_NEW_IMPL(PDPersonModel_CreatePerson, initWithAndroidDatabaseSqliteSQLiteDatabase_, database)
}

PDPersonModel_CreatePerson *create_PDPersonModel_CreatePerson_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *database) {
  J2OBJC_CREATE_IMPL(PDPersonModel_CreatePerson, initWithAndroidDatabaseSqliteSQLiteDatabase_, database)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDPersonModel_CreatePerson)

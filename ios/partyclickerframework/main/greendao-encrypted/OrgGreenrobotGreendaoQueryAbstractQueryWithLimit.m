//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoAbstractDao.h"
#include "OrgGreenrobotGreendaoQueryAbstractQuery.h"
#include "OrgGreenrobotGreendaoQueryAbstractQueryWithLimit.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"

@implementation OrgGreenrobotGreendaoQueryAbstractQueryWithLimit

- (instancetype)initWithOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)dao
                                            withNSString:(NSString *)sql
                                       withNSStringArray:(IOSObjectArray *)initialValues
                                                 withInt:(jint)limitPosition
                                                 withInt:(jint)offsetPosition {
  OrgGreenrobotGreendaoQueryAbstractQueryWithLimit_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSStringArray_withInt_withInt_(self, dao, sql, initialValues, limitPosition, offsetPosition);
  return self;
}

- (OrgGreenrobotGreendaoQueryAbstractQueryWithLimit *)setParameterWithInt:(jint)index
                                                                   withId:(id)parameter {
  if (index >= 0 && (index == limitPosition_ || index == offsetPosition_)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Illegal parameter index: ", index));
  }
  return (OrgGreenrobotGreendaoQueryAbstractQueryWithLimit *) cast_chk([super setParameterWithInt:index withId:parameter], [OrgGreenrobotGreendaoQueryAbstractQueryWithLimit class]);
}

- (void)setLimitWithInt:(jint)limit {
  [self checkThread];
  if (limitPosition_ == -1) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Limit must be set with QueryBuilder before it can be used here");
  }
  IOSObjectArray_Set(nil_chk(parameters_), limitPosition_, JavaLangInteger_toStringWithInt_(limit));
}

- (void)setOffsetWithInt:(jint)offset {
  [self checkThread];
  if (offsetPosition_ == -1) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Offset must be set with QueryBuilder before it can be used here");
  }
  IOSObjectArray_Set(nil_chk(parameters_), offsetPosition_, JavaLangInteger_toStringWithInt_(offset));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoQueryAbstractQueryWithLimit;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgGreenrobotGreendaoAbstractDao:withNSString:withNSStringArray:withInt:withInt:);
  methods[1].selector = @selector(setParameterWithInt:withId:);
  methods[2].selector = @selector(setLimitWithInt:);
  methods[3].selector = @selector(setOffsetWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "limitPosition_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "offsetPosition_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgGreenrobotGreendaoAbstractDao;LNSString;[LNSString;II", "(Lorg/greenrobot/greendao/AbstractDao<TT;*>;Ljava/lang/String;[Ljava/lang/String;II)V", "setParameter", "ILNSObject;", "(ILjava/lang/Object;)Lorg/greenrobot/greendao/query/AbstractQueryWithLimit<TT;>;", "setLimit", "I", "setOffset", "<T:Ljava/lang/Object;>Lorg/greenrobot/greendao/query/AbstractQuery<TT;>;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoQueryAbstractQueryWithLimit = { "AbstractQueryWithLimit", "org.greenrobot.greendao.query", ptrTable, methods, fields, 7, 0x400, 4, 2, -1, -1, -1, 8, -1 };
  return &_OrgGreenrobotGreendaoQueryAbstractQueryWithLimit;
}

@end

void OrgGreenrobotGreendaoQueryAbstractQueryWithLimit_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSStringArray_withInt_withInt_(OrgGreenrobotGreendaoQueryAbstractQueryWithLimit *self, OrgGreenrobotGreendaoAbstractDao *dao, NSString *sql, IOSObjectArray *initialValues, jint limitPosition, jint offsetPosition) {
  OrgGreenrobotGreendaoQueryAbstractQuery_initWithOrgGreenrobotGreendaoAbstractDao_withNSString_withNSStringArray_(self, dao, sql, initialValues);
  self->limitPosition_ = limitPosition;
  self->offsetPosition_ = offsetPosition;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGreenrobotGreendaoQueryAbstractQueryWithLimit)

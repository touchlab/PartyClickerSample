//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoQueryLazyList.h"
#include "OrgGreenrobotGreendaoQueryQuery.h"
#include "OrgGreenrobotGreendaoRxRxBase.h"
#include "OrgGreenrobotGreendaoRxRxQuery.h"
#include "RxExceptionsExceptions.h"
#include "RxObservable.h"
#include "RxScheduler.h"
#include "RxSubscriber.h"
#include "java/util/List.h"
#include "java/util/concurrent/Callable.h"

@interface OrgGreenrobotGreendaoRxRxQuery () {
 @public
  OrgGreenrobotGreendaoQueryQuery *query_;
}

@end

J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoRxRxQuery, query_, OrgGreenrobotGreendaoQueryQuery *)

@interface OrgGreenrobotGreendaoRxRxQuery_1 : NSObject < JavaUtilConcurrentCallable > {
 @public
  OrgGreenrobotGreendaoRxRxQuery *this$0_;
}

- (instancetype)initWithOrgGreenrobotGreendaoRxRxQuery:(OrgGreenrobotGreendaoRxRxQuery *)outer$;

- (id<JavaUtilList>)call;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGreenrobotGreendaoRxRxQuery_1)

__attribute__((unused)) static void OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery_1 *self, OrgGreenrobotGreendaoRxRxQuery *outer$);

__attribute__((unused)) static OrgGreenrobotGreendaoRxRxQuery_1 *new_OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgGreenrobotGreendaoRxRxQuery_1 *create_OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$);

@interface OrgGreenrobotGreendaoRxRxQuery_2 : NSObject < JavaUtilConcurrentCallable > {
 @public
  OrgGreenrobotGreendaoRxRxQuery *this$0_;
}

- (instancetype)initWithOrgGreenrobotGreendaoRxRxQuery:(OrgGreenrobotGreendaoRxRxQuery *)outer$;

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGreenrobotGreendaoRxRxQuery_2)

__attribute__((unused)) static void OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery_2 *self, OrgGreenrobotGreendaoRxRxQuery *outer$);

__attribute__((unused)) static OrgGreenrobotGreendaoRxRxQuery_2 *new_OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgGreenrobotGreendaoRxRxQuery_2 *create_OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$);

@interface OrgGreenrobotGreendaoRxRxQuery_3 : NSObject < RxObservable_OnSubscribe > {
 @public
  OrgGreenrobotGreendaoRxRxQuery *this$0_;
}

- (instancetype)initWithOrgGreenrobotGreendaoRxRxQuery:(OrgGreenrobotGreendaoRxRxQuery *)outer$;

- (void)callWithId:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGreenrobotGreendaoRxRxQuery_3)

__attribute__((unused)) static void OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery_3 *self, OrgGreenrobotGreendaoRxRxQuery *outer$);

__attribute__((unused)) static OrgGreenrobotGreendaoRxRxQuery_3 *new_OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgGreenrobotGreendaoRxRxQuery_3 *create_OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$);

@implementation OrgGreenrobotGreendaoRxRxQuery

- (instancetype)initWithOrgGreenrobotGreendaoQueryQuery:(OrgGreenrobotGreendaoQueryQuery *)query {
  OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_(self, query);
  return self;
}

- (instancetype)initWithOrgGreenrobotGreendaoQueryQuery:(OrgGreenrobotGreendaoQueryQuery *)query
                                        withRxScheduler:(RxScheduler *)scheduler {
  OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_withRxScheduler_(self, query, scheduler);
  return self;
}

- (RxObservable *)list {
  return [self wrapWithJavaUtilConcurrentCallable:create_OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(self)];
}

- (RxObservable *)unique {
  return [self wrapWithJavaUtilConcurrentCallable:create_OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(self)];
}

- (RxObservable *)oneByOne {
  RxObservable *observable = RxObservable_createWithRxObservable_OnSubscribe_(create_OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(self));
  return [self wrapWithRxObservable:observable];
}

- (void)dealloc {
  RELEASE_(query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgGreenrobotGreendaoQueryQuery:);
  methods[1].selector = @selector(initWithOrgGreenrobotGreendaoQueryQuery:withRxScheduler:);
  methods[2].selector = @selector(list);
  methods[3].selector = @selector(unique);
  methods[4].selector = @selector(oneByOne);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgGreenrobotGreendaoQueryQuery;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOrgGreenrobotGreendaoQueryQuery;", "(Lorg/greenrobot/greendao/query/Query<TT;>;)V", "LOrgGreenrobotGreendaoQueryQuery;LRxScheduler;", "(Lorg/greenrobot/greendao/query/Query<TT;>;Lrx/Scheduler;)V", "()Lrx/Observable<Ljava/util/List<TT;>;>;", "()Lrx/Observable<TT;>;", "Lorg/greenrobot/greendao/query/Query<TT;>;", "<T:Ljava/lang/Object;>Lorg/greenrobot/greendao/rx/RxBase;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoRxRxQuery = { "RxQuery", "org.greenrobot.greendao.rx", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, 7, -1 };
  return &_OrgGreenrobotGreendaoRxRxQuery;
}

@end

void OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_(OrgGreenrobotGreendaoRxRxQuery *self, OrgGreenrobotGreendaoQueryQuery *query) {
  OrgGreenrobotGreendaoRxRxBase_init(self);
  JreStrongAssign(&self->query_, query);
}

OrgGreenrobotGreendaoRxRxQuery *new_OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_(OrgGreenrobotGreendaoQueryQuery *query) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoRxRxQuery, initWithOrgGreenrobotGreendaoQueryQuery_, query)
}

OrgGreenrobotGreendaoRxRxQuery *create_OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_(OrgGreenrobotGreendaoQueryQuery *query) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoRxRxQuery, initWithOrgGreenrobotGreendaoQueryQuery_, query)
}

void OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_withRxScheduler_(OrgGreenrobotGreendaoRxRxQuery *self, OrgGreenrobotGreendaoQueryQuery *query, RxScheduler *scheduler) {
  OrgGreenrobotGreendaoRxRxBase_initWithRxScheduler_(self, scheduler);
  JreStrongAssign(&self->query_, query);
}

OrgGreenrobotGreendaoRxRxQuery *new_OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_withRxScheduler_(OrgGreenrobotGreendaoQueryQuery *query, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoRxRxQuery, initWithOrgGreenrobotGreendaoQueryQuery_withRxScheduler_, query, scheduler)
}

OrgGreenrobotGreendaoRxRxQuery *create_OrgGreenrobotGreendaoRxRxQuery_initWithOrgGreenrobotGreendaoQueryQuery_withRxScheduler_(OrgGreenrobotGreendaoQueryQuery *query, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoRxRxQuery, initWithOrgGreenrobotGreendaoQueryQuery_withRxScheduler_, query, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGreenrobotGreendaoRxRxQuery)

@implementation OrgGreenrobotGreendaoRxRxQuery_1

- (instancetype)initWithOrgGreenrobotGreendaoRxRxQuery:(OrgGreenrobotGreendaoRxRxQuery *)outer$ {
  OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(self, outer$);
  return self;
}

- (id<JavaUtilList>)call {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([((OrgGreenrobotGreendaoQueryQuery *) nil_chk(this$0_->query_)) forCurrentThread])) list];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, 0, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgGreenrobotGreendaoRxRxQuery:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgGreenrobotGreendaoRxRxQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "()Ljava/util/List<TT;>;", "Lorg/greenrobot/greendao/rx/RxQuery<TT;>;", "LOrgGreenrobotGreendaoRxRxQuery;", "list", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Ljava/util/List<TT;>;>;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoRxRxQuery_1 = { "", "org.greenrobot.greendao.rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, 5, -1 };
  return &_OrgGreenrobotGreendaoRxRxQuery_1;
}

@end

void OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery_1 *self, OrgGreenrobotGreendaoRxRxQuery *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgGreenrobotGreendaoRxRxQuery_1 *new_OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoRxRxQuery_1, initWithOrgGreenrobotGreendaoRxRxQuery_, outer$)
}

OrgGreenrobotGreendaoRxRxQuery_1 *create_OrgGreenrobotGreendaoRxRxQuery_1_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoRxRxQuery_1, initWithOrgGreenrobotGreendaoRxRxQuery_, outer$)
}

@implementation OrgGreenrobotGreendaoRxRxQuery_2

- (instancetype)initWithOrgGreenrobotGreendaoRxRxQuery:(OrgGreenrobotGreendaoRxRxQuery *)outer$ {
  OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(self, outer$);
  return self;
}

- (id)call {
  return [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([((OrgGreenrobotGreendaoQueryQuery *) nil_chk(this$0_->query_)) forCurrentThread])) unique];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 0, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgGreenrobotGreendaoRxRxQuery:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgGreenrobotGreendaoRxRxQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "()TT;", "Lorg/greenrobot/greendao/rx/RxQuery<TT;>;", "LOrgGreenrobotGreendaoRxRxQuery;", "unique", "Ljava/lang/Object;Ljava/util/concurrent/Callable<TT;>;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoRxRxQuery_2 = { "", "org.greenrobot.greendao.rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, 5, -1 };
  return &_OrgGreenrobotGreendaoRxRxQuery_2;
}

@end

void OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery_2 *self, OrgGreenrobotGreendaoRxRxQuery *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgGreenrobotGreendaoRxRxQuery_2 *new_OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoRxRxQuery_2, initWithOrgGreenrobotGreendaoRxRxQuery_, outer$)
}

OrgGreenrobotGreendaoRxRxQuery_2 *create_OrgGreenrobotGreendaoRxRxQuery_2_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoRxRxQuery_2, initWithOrgGreenrobotGreendaoRxRxQuery_, outer$)
}

@implementation OrgGreenrobotGreendaoRxRxQuery_3

- (instancetype)initWithOrgGreenrobotGreendaoRxRxQuery:(OrgGreenrobotGreendaoRxRxQuery *)outer$ {
  OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(self, outer$);
  return self;
}

- (void)callWithId:(RxSubscriber *)subscriber {
  @try {
    OrgGreenrobotGreendaoQueryLazyList *lazyList = [((OrgGreenrobotGreendaoQueryQuery *) nil_chk([((OrgGreenrobotGreendaoQueryQuery *) nil_chk(this$0_->query_)) forCurrentThread])) listLazyUncached];
    @try {
      for (id __strong entity in nil_chk(lazyList)) {
        if ([((RxSubscriber *) nil_chk(subscriber)) isUnsubscribed]) {
          break;
        }
        [subscriber onNextWithId:entity];
      }
    }
    @finally {
      [lazyList close];
    }
    if (![((RxSubscriber *) nil_chk(subscriber)) isUnsubscribed]) {
      [subscriber onCompleted];
    }
  }
  @catch (NSException *e) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(e);
    [((RxSubscriber *) nil_chk(subscriber)) onErrorWithNSException:e];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgGreenrobotGreendaoRxRxQuery:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgGreenrobotGreendaoRxRxQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lorg/greenrobot/greendao/rx/RxQuery<TT;>;", "LOrgGreenrobotGreendaoRxRxQuery;", "oneByOne", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoRxRxQuery_3 = { "", "org.greenrobot.greendao.rx", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, 6, -1 };
  return &_OrgGreenrobotGreendaoRxRxQuery_3;
}

@end

void OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery_3 *self, OrgGreenrobotGreendaoRxRxQuery *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgGreenrobotGreendaoRxRxQuery_3 *new_OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoRxRxQuery_3, initWithOrgGreenrobotGreendaoRxRxQuery_, outer$)
}

OrgGreenrobotGreendaoRxRxQuery_3 *create_OrgGreenrobotGreendaoRxRxQuery_3_initWithOrgGreenrobotGreendaoRxRxQuery_(OrgGreenrobotGreendaoRxRxQuery *outer$) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoRxRxQuery_3, initWithOrgGreenrobotGreendaoRxRxQuery_, outer$)
}

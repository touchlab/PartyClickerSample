//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgGreenrobotGreendaoRxRxTransaction")
#ifdef RESTRICT_OrgGreenrobotGreendaoRxRxTransaction
#define INCLUDE_ALL_OrgGreenrobotGreendaoRxRxTransaction 0
#else
#define INCLUDE_ALL_OrgGreenrobotGreendaoRxRxTransaction 1
#endif
#undef RESTRICT_OrgGreenrobotGreendaoRxRxTransaction

#if !defined (OrgGreenrobotGreendaoRxRxTransaction_) && (INCLUDE_ALL_OrgGreenrobotGreendaoRxRxTransaction || defined(INCLUDE_OrgGreenrobotGreendaoRxRxTransaction))
#define OrgGreenrobotGreendaoRxRxTransaction_

#define RESTRICT_OrgGreenrobotGreendaoRxRxBase 1
#define INCLUDE_OrgGreenrobotGreendaoRxRxBase 1
#include "OrgGreenrobotGreendaoRxRxBase.h"

@class OrgGreenrobotGreendaoAbstractDaoSession;
@class RxObservable;
@class RxScheduler;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;

@interface OrgGreenrobotGreendaoRxRxTransaction : OrgGreenrobotGreendaoRxRxBase

#pragma mark Public

- (instancetype)initWithOrgGreenrobotGreendaoAbstractDaoSession:(OrgGreenrobotGreendaoAbstractDaoSession *)daoSession;

- (instancetype)initWithOrgGreenrobotGreendaoAbstractDaoSession:(OrgGreenrobotGreendaoAbstractDaoSession *)daoSession
                                                withRxScheduler:(RxScheduler *)scheduler;

- (RxObservable *)callWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

- (OrgGreenrobotGreendaoAbstractDaoSession *)getDaoSession;

- (RxObservable *)runWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGreenrobotGreendaoRxRxTransaction)

FOUNDATION_EXPORT void OrgGreenrobotGreendaoRxRxTransaction_initWithOrgGreenrobotGreendaoAbstractDaoSession_(OrgGreenrobotGreendaoRxRxTransaction *self, OrgGreenrobotGreendaoAbstractDaoSession *daoSession);

FOUNDATION_EXPORT OrgGreenrobotGreendaoRxRxTransaction *new_OrgGreenrobotGreendaoRxRxTransaction_initWithOrgGreenrobotGreendaoAbstractDaoSession_(OrgGreenrobotGreendaoAbstractDaoSession *daoSession) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgGreenrobotGreendaoRxRxTransaction *create_OrgGreenrobotGreendaoRxRxTransaction_initWithOrgGreenrobotGreendaoAbstractDaoSession_(OrgGreenrobotGreendaoAbstractDaoSession *daoSession);

FOUNDATION_EXPORT void OrgGreenrobotGreendaoRxRxTransaction_initWithOrgGreenrobotGreendaoAbstractDaoSession_withRxScheduler_(OrgGreenrobotGreendaoRxRxTransaction *self, OrgGreenrobotGreendaoAbstractDaoSession *daoSession, RxScheduler *scheduler);

FOUNDATION_EXPORT OrgGreenrobotGreendaoRxRxTransaction *new_OrgGreenrobotGreendaoRxRxTransaction_initWithOrgGreenrobotGreendaoAbstractDaoSession_withRxScheduler_(OrgGreenrobotGreendaoAbstractDaoSession *daoSession, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgGreenrobotGreendaoRxRxTransaction *create_OrgGreenrobotGreendaoRxRxTransaction_initWithOrgGreenrobotGreendaoAbstractDaoSession_withRxScheduler_(OrgGreenrobotGreendaoAbstractDaoSession *daoSession, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(OrgGreenrobotGreendaoRxRxTransaction)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgGreenrobotGreendaoRxRxTransaction")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoAbstractDao.h"
#include "OrgGreenrobotGreendaoAsyncAsyncDaoException.h"
#include "OrgGreenrobotGreendaoAsyncAsyncOperation.h"
#include "OrgGreenrobotGreendaoDaoException.h"
#include "OrgGreenrobotGreendaoDatabaseDatabase.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InterruptedException.h"

@interface OrgGreenrobotGreendaoAsyncAsyncOperation () {
 @public
  id<OrgGreenrobotGreendaoDatabaseDatabase> database_;
  volatile_jboolean completed_;
}

@end

J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoAsyncAsyncOperation, database_, id<OrgGreenrobotGreendaoDatabaseDatabase>)

__attribute__((unused)) static void OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_initWithNSString_withInt_(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *self, NSString *__name, jint __ordinal);

@implementation OrgGreenrobotGreendaoAsyncAsyncOperation

- (instancetype)initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType:(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *)type
                                          withOrgGreenrobotGreendaoAbstractDao:(OrgGreenrobotGreendaoAbstractDao *)dao
                                     withOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)database
                                                                        withId:(id)parameter
                                                                       withInt:(jint)flags {
  OrgGreenrobotGreendaoAsyncAsyncOperation_initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoDatabaseDatabase_withId_withInt_(self, type, dao, database, parameter, flags);
  return self;
}

- (NSException *)getThrowable {
  return JreLoadVolatileId(&throwable_);
}

- (void)setThrowableWithNSException:(NSException *)throwable {
  JreVolatileStrongAssign(&self->throwable_, throwable);
}

- (OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *)getType {
  return type_;
}

- (id)getParameter {
  return parameter_;
}

- (id)getResult {
  @synchronized(self) {
    if (!JreLoadVolatileBoolean(&completed_)) {
      [self waitForCompletion];
    }
    if (JreLoadVolatileId(&throwable_) != nil) {
      @throw create_OrgGreenrobotGreendaoAsyncAsyncDaoException_initWithOrgGreenrobotGreendaoAsyncAsyncOperation_withNSException_(self, JreLoadVolatileId(&throwable_));
    }
    return JreLoadVolatileId(&result_);
  }
}

- (jboolean)isMergeTx {
  return (flags_ & OrgGreenrobotGreendaoAsyncAsyncOperation_FLAG_MERGE_TX) != 0;
}

- (id<OrgGreenrobotGreendaoDatabaseDatabase>)getDatabase {
  return database_ != nil ? database_ : [((OrgGreenrobotGreendaoAbstractDao *) nil_chk(dao_)) getDatabase];
}

- (jboolean)isMergeableWithWithOrgGreenrobotGreendaoAsyncAsyncOperation:(OrgGreenrobotGreendaoAsyncAsyncOperation *)other {
  return other != nil && [self isMergeTx] && [other isMergeTx] && [self getDatabase] == [other getDatabase];
}

- (jlong)getTimeStarted {
  return JreLoadVolatileLong(&timeStarted_);
}

- (jlong)getTimeCompleted {
  return JreLoadVolatileLong(&timeCompleted_);
}

- (jlong)getDuration {
  if (JreLoadVolatileLong(&timeCompleted_) == 0) {
    @throw create_OrgGreenrobotGreendaoDaoException_initWithNSString_(@"This operation did not yet complete");
  }
  else {
    return JreLoadVolatileLong(&timeCompleted_) - JreLoadVolatileLong(&timeStarted_);
  }
}

- (jboolean)isFailed {
  return JreLoadVolatileId(&throwable_) != nil;
}

- (jboolean)isCompleted {
  return JreLoadVolatileBoolean(&completed_);
}

- (id)waitForCompletion {
  @synchronized(self) {
    while (!JreLoadVolatileBoolean(&completed_)) {
      @try {
        [self java_wait];
      }
      @catch (JavaLangInterruptedException *e) {
        @throw create_OrgGreenrobotGreendaoDaoException_initWithNSString_withNSException_(@"Interrupted while waiting for operation to complete", e);
      }
    }
    return JreLoadVolatileId(&result_);
  }
}

- (jboolean)waitForCompletionWithInt:(jint)maxMillis {
  @synchronized(self) {
    if (!JreLoadVolatileBoolean(&completed_)) {
      @try {
        [self java_waitWithLong:maxMillis];
      }
      @catch (JavaLangInterruptedException *e) {
        @throw create_OrgGreenrobotGreendaoDaoException_initWithNSString_withNSException_(@"Interrupted while waiting for operation to complete", e);
      }
    }
    return JreLoadVolatileBoolean(&completed_);
  }
}

- (void)setCompleted {
  @synchronized(self) {
    JreAssignVolatileBoolean(&completed_, true);
    [self java_notifyAll];
  }
}

- (jboolean)isCompletedSucessfully {
  return JreLoadVolatileBoolean(&completed_) && JreLoadVolatileId(&throwable_) == nil;
}

- (jint)getMergedOperationsCount {
  return JreLoadVolatileInt(&mergedOperationsCount_);
}

- (jint)getSequenceNumber {
  return sequenceNumber_;
}

- (void)reset {
  JreAssignVolatileLong(&timeStarted_, 0);
  JreAssignVolatileLong(&timeCompleted_, 0);
  JreAssignVolatileBoolean(&completed_, false);
  JreVolatileStrongAssign(&throwable_, nil);
  JreVolatileStrongAssign(&result_, nil);
  JreAssignVolatileInt(&mergedOperationsCount_, 0);
}

- (JavaLangException *)getCreatorStacktrace {
  return creatorStacktrace_;
}

- (void)__javaClone:(OrgGreenrobotGreendaoAsyncAsyncOperation *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&throwable_, &original->throwable_);
  JreCloneVolatileStrong(&result_, &original->result_);
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(dao_);
  RELEASE_(database_);
  RELEASE_(parameter_);
  JreReleaseVolatile(&throwable_);
  RELEASE_(creatorStacktrace_);
  JreReleaseVolatile(&result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSException;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoDatabaseDatabase;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x21, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x20, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangException;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType:withOrgGreenrobotGreendaoAbstractDao:withOrgGreenrobotGreendaoDatabaseDatabase:withId:withInt:);
  methods[1].selector = @selector(getThrowable);
  methods[2].selector = @selector(setThrowableWithNSException:);
  methods[3].selector = @selector(getType);
  methods[4].selector = @selector(getParameter);
  methods[5].selector = @selector(getResult);
  methods[6].selector = @selector(isMergeTx);
  methods[7].selector = @selector(getDatabase);
  methods[8].selector = @selector(isMergeableWithWithOrgGreenrobotGreendaoAsyncAsyncOperation:);
  methods[9].selector = @selector(getTimeStarted);
  methods[10].selector = @selector(getTimeCompleted);
  methods[11].selector = @selector(getDuration);
  methods[12].selector = @selector(isFailed);
  methods[13].selector = @selector(isCompleted);
  methods[14].selector = @selector(waitForCompletion);
  methods[15].selector = @selector(waitForCompletionWithInt:);
  methods[16].selector = @selector(setCompleted);
  methods[17].selector = @selector(isCompletedSucessfully);
  methods[18].selector = @selector(getMergedOperationsCount);
  methods[19].selector = @selector(getSequenceNumber);
  methods[20].selector = @selector(reset);
  methods[21].selector = @selector(getCreatorStacktrace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FLAG_MERGE_TX", "I", .constantValue.asInt = OrgGreenrobotGreendaoAsyncAsyncOperation_FLAG_MERGE_TX, 0x19, -1, -1, -1, -1 },
    { "FLAG_STOP_QUEUE_ON_EXCEPTION", "I", .constantValue.asInt = OrgGreenrobotGreendaoAsyncAsyncOperation_FLAG_STOP_QUEUE_ON_EXCEPTION, 0x19, -1, -1, -1, -1 },
    { "FLAG_TRACK_CREATOR_STACKTRACE", "I", .constantValue.asInt = OrgGreenrobotGreendaoAsyncAsyncOperation_FLAG_TRACK_CREATOR_STACKTRACE, 0x19, -1, -1, -1, -1 },
    { "type_", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dao_", "LOrgGreenrobotGreendaoAbstractDao;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "database_", "LOrgGreenrobotGreendaoDatabaseDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parameter_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "flags_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "timeStarted_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "timeCompleted_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "completed_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "throwable_", "LNSException;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "creatorStacktrace_", "LJavaLangException;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "result_", "LNSObject;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "mergedOperationsCount_", "I", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "sequenceNumber_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;LOrgGreenrobotGreendaoAbstractDao;LOrgGreenrobotGreendaoDatabaseDatabase;LNSObject;I", "(Lorg/greenrobot/greendao/async/AsyncOperation$OperationType;Lorg/greenrobot/greendao/AbstractDao<**>;Lorg/greenrobot/greendao/database/Database;Ljava/lang/Object;I)V", "setThrowable", "LNSException;", "isMergeableWith", "LOrgGreenrobotGreendaoAsyncAsyncOperation;", "waitForCompletion", "I", "Lorg/greenrobot/greendao/AbstractDao<Ljava/lang/Object;Ljava/lang/Object;>;", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoAsyncAsyncOperation = { "AsyncOperation", "org.greenrobot.greendao.async", ptrTable, methods, fields, 7, 0x1, 22, 16, -1, 9, -1, -1, -1 };
  return &_OrgGreenrobotGreendaoAsyncAsyncOperation;
}

@end

void OrgGreenrobotGreendaoAsyncAsyncOperation_initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoDatabaseDatabase_withId_withInt_(OrgGreenrobotGreendaoAsyncAsyncOperation *self, OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *type, OrgGreenrobotGreendaoAbstractDao *dao, id<OrgGreenrobotGreendaoDatabaseDatabase> database, id parameter, jint flags) {
  NSObject_init(self);
  JreStrongAssign(&self->type_, type);
  self->flags_ = flags;
  JreStrongAssign(&self->dao_, dao);
  JreStrongAssign(&self->database_, database);
  JreStrongAssign(&self->parameter_, parameter);
  JreStrongAssign(&self->creatorStacktrace_, (flags & OrgGreenrobotGreendaoAsyncAsyncOperation_FLAG_TRACK_CREATOR_STACKTRACE) != 0 ? create_JavaLangException_initWithNSString_(@"AsyncOperation was created here") : nil);
}

OrgGreenrobotGreendaoAsyncAsyncOperation *new_OrgGreenrobotGreendaoAsyncAsyncOperation_initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoDatabaseDatabase_withId_withInt_(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *type, OrgGreenrobotGreendaoAbstractDao *dao, id<OrgGreenrobotGreendaoDatabaseDatabase> database, id parameter, jint flags) {
  J2OBJC_NEW_IMPL(OrgGreenrobotGreendaoAsyncAsyncOperation, initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoDatabaseDatabase_withId_withInt_, type, dao, database, parameter, flags)
}

OrgGreenrobotGreendaoAsyncAsyncOperation *create_OrgGreenrobotGreendaoAsyncAsyncOperation_initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoDatabaseDatabase_withId_withInt_(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *type, OrgGreenrobotGreendaoAbstractDao *dao, id<OrgGreenrobotGreendaoDatabaseDatabase> database, id parameter, jint flags) {
  J2OBJC_CREATE_IMPL(OrgGreenrobotGreendaoAsyncAsyncOperation, initWithOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_withOrgGreenrobotGreendaoAbstractDao_withOrgGreenrobotGreendaoDatabaseDatabase_withId_withInt_, type, dao, database, parameter, flags)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGreenrobotGreendaoAsyncAsyncOperation)

J2OBJC_INITIALIZED_DEFN(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType)

OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values_[22];

@implementation OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType

+ (IOSObjectArray *)values {
  return OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values();
}

+ (OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *)valueOfWithNSString:(NSString *)name {
  return OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "Insert", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "InsertInTxIterable", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "InsertInTxArray", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "InsertOrReplace", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "InsertOrReplaceInTxIterable", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "InsertOrReplaceInTxArray", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "Update", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "UpdateInTxIterable", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "UpdateInTxArray", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "Delete", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "DeleteInTxIterable", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "DeleteInTxArray", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "DeleteByKey", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "DeleteAll", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "TransactionRunnable", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "TransactionCallable", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
    { "QueryList", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 18, -1, -1 },
    { "QueryUnique", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 19, -1, -1 },
    { "Load", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 20, -1, -1 },
    { "LoadAll", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 21, -1, -1 },
    { "Count", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 22, -1, -1 },
    { "Refresh", "LOrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;", .constantValue.asLong = 0, 0x4019, -1, 23, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, Insert), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, InsertInTxIterable), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, InsertInTxArray), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, InsertOrReplace), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, InsertOrReplaceInTxIterable), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, InsertOrReplaceInTxArray), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, Update), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, UpdateInTxIterable), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, UpdateInTxArray), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, Delete), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, DeleteInTxIterable), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, DeleteInTxArray), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, DeleteByKey), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, DeleteAll), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, TransactionRunnable), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, TransactionCallable), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, QueryList), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, QueryUnique), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, Load), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, LoadAll), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, Count), &JreEnum(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType, Refresh), "LOrgGreenrobotGreendaoAsyncAsyncOperation;", "Ljava/lang/Enum<Lorg/greenrobot/greendao/async/AsyncOperation$OperationType;>;" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType = { "OperationType", "org.greenrobot.greendao.async", ptrTable, methods, fields, 7, 0x4019, 2, 22, 24, -1, -1, 25, -1 };
  return &_OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType;
}

+ (void)initialize {
  if (self == [OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 22 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"Insert", @"InsertInTxIterable", @"InsertInTxArray", @"InsertOrReplace", @"InsertOrReplaceInTxIterable", @"InsertOrReplaceInTxArray", @"Update", @"UpdateInTxIterable", @"UpdateInTxArray", @"Delete", @"DeleteInTxIterable", @"DeleteInTxArray", @"DeleteByKey", @"DeleteAll", @"TransactionRunnable", @"TransactionCallable", @"QueryList", @"QueryUnique", @"Load", @"LoadAll", @"Count", @"Refresh",
    };
    for (jint i = 0; i < 22; i++) {
      (OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType)
  }
}

@end

void OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_initWithNSString_withInt_(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values() {
  OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values_ count:22 type:OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_class_()];
}

OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_valueOfWithNSString_(NSString *name) {
  OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_initialize();
  for (int i = 0; i < 22; i++) {
    OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *e = OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType *OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_fromOrdinal(NSUInteger ordinal) {
  OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_initialize();
  if (ordinal >= 22) {
    return nil;
  }
  return OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGreenrobotGreendaoAsyncAsyncOperation_OperationType)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseDatabaseUtils.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoDatabaseDatabase.h"
#include "OrgGreenrobotGreendaoDatabaseStandardDatabase.h"
#include "OrgGreenrobotGreendaoProperty.h"
#include "OrgGreenrobotGreendaoQueryDeleteQuery.h"
#include "OrgGreenrobotGreendaoQueryQueryBuilder.h"
#include "OrgGreenrobotGreendaoQueryWhereCondition.h"
#include "PDDaoSession.h"
#include "PDDatabaseHelper.h"
#include "PDParty.h"
#include "PDPartyDao.h"
#include "PDPerson.h"
#include "PDPersonDao.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/Date.h"
#include "java/util/List.h"

@interface PDDatabaseHelper () {
 @public
  PDDaoSession *daoSession_;
}

@end

J2OBJC_FIELD_SETTER(PDDatabaseHelper, daoSession_, PDDaoSession *)

@implementation PDDatabaseHelper

- (instancetype)initWithPDDaoSession:(PDDaoSession *)daoSession {
  PDDatabaseHelper_initWithPDDaoSession_(self, daoSession);
  return self;
}

- (jint)countCurrentPartyWithInt:(jint)partyId {
  return (jint) AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_([((OrgGreenrobotGreendaoDatabaseStandardDatabase *) nil_chk(((OrgGreenrobotGreendaoDatabaseStandardDatabase *) cast_chk([((PDDaoSession *) nil_chk(daoSession_)) getDatabase], [OrgGreenrobotGreendaoDatabaseStandardDatabase class])))) getSQLiteDatabase], @"select sum(val) from person where party_Id = ?", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_toStringWithInt_(partyId) } count:1 type:NSString_class_()]);
}

- (id<JavaUtilList>)allPeopleForPartyWithPDParty:(PDParty *)party {
  PDPersonDao *personDao = [((PDDaoSession *) nil_chk(daoSession_)) getPersonDao];
  return [((OrgGreenrobotGreendaoQueryQueryBuilder *) nil_chk([((OrgGreenrobotGreendaoQueryQueryBuilder *) nil_chk([((PDPersonDao *) nil_chk(personDao)) queryBuilder])) whereWithOrgGreenrobotGreendaoQueryWhereCondition:[((OrgGreenrobotGreendaoProperty *) nil_chk(JreLoadStatic(PDPersonDao_Properties, PartyId))) eqWithId:[((PDParty *) nil_chk(party)) getId]] withOrgGreenrobotGreendaoQueryWhereConditionArray:[IOSObjectArray arrayWithLength:0 type:OrgGreenrobotGreendaoQueryWhereCondition_class_()]])) list];
}

- (void)addPersonWithPDParty:(PDParty *)party
                 withBoolean:(jboolean)coming {
  PDPerson *person = create_PDPerson_init();
  [person setPartyWithPDParty:party];
  person->partyId_ = [((JavaLangLong *) nil_chk([((PDParty *) nil_chk(party)) getId])) longLongValue];
  JreStrongAssignAndConsume(&person->recorded_, new_JavaUtilDate_init());
  person->val_ = (jshort) (coming ? 1 : -1);
  [((PDPersonDao *) nil_chk([((PDDaoSession *) nil_chk(daoSession_)) getPersonDao])) insertWithId:person];
}

- (id<JavaUtilList>)allParties {
  return [((OrgGreenrobotGreendaoQueryQueryBuilder *) nil_chk([((OrgGreenrobotGreendaoQueryQueryBuilder *) nil_chk([((PDPartyDao *) nil_chk([((PDDaoSession *) nil_chk(daoSession_)) getPartyDao])) queryBuilder])) orderDescWithOrgGreenrobotGreendaoPropertyArray:[IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(PDPartyDao_Properties, Created) } count:1 type:OrgGreenrobotGreendaoProperty_class_()]])) list];
}

- (PDParty *)createPartyWithNSString:(NSString *)name {
  PDParty *party = create_PDParty_init();
  JreStrongAssignAndConsume(&party->created_, new_JavaUtilDate_init());
  JreStrongAssign(&party->name_, name);
  [((PDPartyDao *) nil_chk([((PDDaoSession *) nil_chk(daoSession_)) getPartyDao])) insertWithId:party];
  return party;
}

- (void)deletePartyWithPDParty:(PDParty *)party {
  id<OrgGreenrobotGreendaoDatabaseDatabase> database = [((PDDaoSession *) nil_chk(daoSession_)) getDatabase];
  [((id<OrgGreenrobotGreendaoDatabaseDatabase>) nil_chk(database)) beginTransaction];
  @try {
    [((OrgGreenrobotGreendaoQueryDeleteQuery *) nil_chk([((OrgGreenrobotGreendaoQueryQueryBuilder *) nil_chk([((OrgGreenrobotGreendaoQueryQueryBuilder *) nil_chk([((PDPersonDao *) nil_chk([daoSession_ getPersonDao])) queryBuilder])) whereWithOrgGreenrobotGreendaoQueryWhereCondition:[((OrgGreenrobotGreendaoProperty *) nil_chk(JreLoadStatic(PDPersonDao_Properties, PartyId))) eqWithId:[((PDParty *) nil_chk(party)) getId]] withOrgGreenrobotGreendaoQueryWhereConditionArray:[IOSObjectArray arrayWithLength:0 type:OrgGreenrobotGreendaoQueryWhereCondition_class_()]])) buildDelete])) executeDeleteWithoutDetachingEntities];
    [((PDPartyDao *) nil_chk([daoSession_ getPartyDao])) delete__WithId:party];
    [daoSession_ clear];
    [database setTransactionSuccessful];
  }
  @finally {
    [database endTransaction];
  }
}

- (PDParty *)loadPartyWithInt:(jint)id_ {
  return [((PDPartyDao *) nil_chk([((PDDaoSession *) nil_chk(daoSession_)) getPartyDao])) load__WithId:JavaLangLong_valueOfWithLong_((jlong) id_)];
}

- (void)dealloc {
  RELEASE_(daoSession_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LPDParty;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 4, -1, -1, -1, -1 },
    { NULL, "LPDParty;", 0x1, 12, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithPDDaoSession:);
  methods[1].selector = @selector(countCurrentPartyWithInt:);
  methods[2].selector = @selector(allPeopleForPartyWithPDParty:);
  methods[3].selector = @selector(addPersonWithPDParty:withBoolean:);
  methods[4].selector = @selector(allParties);
  methods[5].selector = @selector(createPartyWithNSString:);
  methods[6].selector = @selector(deletePartyWithPDParty:);
  methods[7].selector = @selector(loadPartyWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "daoSession_", "LPDDaoSession;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LPDDaoSession;", "countCurrentParty", "I", "allPeopleForParty", "LPDParty;", "(Lcom/kgalligan/partyclicker/data/Party;)Ljava/util/List<Lcom/kgalligan/partyclicker/data/Person;>;", "addPerson", "LPDParty;Z", "()Ljava/util/List<Lcom/kgalligan/partyclicker/data/Party;>;", "createParty", "LNSString;", "deleteParty", "loadParty" };
  static const J2ObjcClassInfo _PDDatabaseHelper = { "DatabaseHelper", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_PDDatabaseHelper;
}

@end

void PDDatabaseHelper_initWithPDDaoSession_(PDDatabaseHelper *self, PDDaoSession *daoSession) {
  NSObject_init(self);
  JreStrongAssign(&self->daoSession_, daoSession);
}

PDDatabaseHelper *new_PDDatabaseHelper_initWithPDDaoSession_(PDDaoSession *daoSession) {
  J2OBJC_NEW_IMPL(PDDatabaseHelper, initWithPDDaoSession_, daoSession)
}

PDDatabaseHelper *create_PDDatabaseHelper_initWithPDDaoSession_(PDDaoSession *daoSession) {
  J2OBJC_CREATE_IMPL(PDDatabaseHelper, initWithPDDaoSession_, daoSession)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDDatabaseHelper)

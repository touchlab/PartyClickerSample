//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "PTAutoValue_MemParty.h"
#include "PTMemParty.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/util/List.h"

@interface PTAutoValue_MemParty () {
 @public
  jlong id__;
  NSString *name_;
  jlong created_;
  id<JavaUtilList> people_;
}

- (instancetype)initWithLong:(jlong)id_
                withNSString:(NSString *)name
                    withLong:(jlong)created
            withJavaUtilList:(id<JavaUtilList>)people;

@end

J2OBJC_FIELD_SETTER(PTAutoValue_MemParty, name_, NSString *)
J2OBJC_FIELD_SETTER(PTAutoValue_MemParty, people_, id<JavaUtilList>)

__attribute__((unused)) static void PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(PTAutoValue_MemParty *self, jlong id_, NSString *name, jlong created, id<JavaUtilList> people);

__attribute__((unused)) static PTAutoValue_MemParty *new_PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(jlong id_, NSString *name, jlong created, id<JavaUtilList> people) NS_RETURNS_RETAINED;

__attribute__((unused)) static PTAutoValue_MemParty *create_PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(jlong id_, NSString *name, jlong created, id<JavaUtilList> people);

@interface PTAutoValue_MemParty_Builder () {
 @public
  JavaLangLong *id__;
  NSString *name_;
  JavaLangLong *created_;
  id<JavaUtilList> people_;
}

@end

J2OBJC_FIELD_SETTER(PTAutoValue_MemParty_Builder, id__, JavaLangLong *)
J2OBJC_FIELD_SETTER(PTAutoValue_MemParty_Builder, name_, NSString *)
J2OBJC_FIELD_SETTER(PTAutoValue_MemParty_Builder, created_, JavaLangLong *)
J2OBJC_FIELD_SETTER(PTAutoValue_MemParty_Builder, people_, id<JavaUtilList>)

@implementation PTAutoValue_MemParty

- (instancetype)initWithLong:(jlong)id_
                withNSString:(NSString *)name
                    withLong:(jlong)created
            withJavaUtilList:(id<JavaUtilList>)people {
  PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(self, id_, name, created, people);
  return self;
}

- (jlong)id__ {
  return id__;
}

- (NSString *)name {
  return name_;
}

- (jlong)created {
  return created_;
}

- (id<JavaUtilList>)people {
  return people_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if ([o isKindOfClass:[PTMemParty class]]) {
    PTMemParty *that = (PTMemParty *) cast_chk(o, [PTMemParty class]);
    return (self->id__ == [((PTMemParty *) nil_chk(that)) id__]) && ([((NSString *) nil_chk(self->name_)) isEqual:[that name]]) && (self->created_ == [that created]) && ([((id<JavaUtilList>) nil_chk(self->people_)) isEqual:[that people]]);
  }
  return false;
}

- (NSUInteger)hash {
  jint h = 1;
  h *= 1000003;
  h ^= (JreURShift64(self->id__, 32)) ^ self->id__;
  h *= 1000003;
  h ^= ((jint) [((NSString *) nil_chk(self->name_)) hash]);
  h *= 1000003;
  h ^= (JreURShift64(self->created_, 32)) ^ self->created_;
  h *= 1000003;
  h ^= ((jint) [((id<JavaUtilList>) nil_chk(self->people_)) hash]);
  return h;
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(people_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "J", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:withNSString:withLong:withJavaUtilList:);
  methods[1].selector = @selector(id__);
  methods[2].selector = @selector(name);
  methods[3].selector = @selector(created);
  methods[4].selector = @selector(people);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "J", .constantValue.asLong = 0, 0x12, 2, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "created_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "people_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "JLNSString;JLJavaUtilList;", "(JLjava/lang/String;JLjava/util/List<Lcom/kgalligan/partyclicker/data/Person;>;)V", "id", "()Ljava/util/List<Lcom/kgalligan/partyclicker/data/Person;>;", "equals", "LNSObject;", "hashCode", "Ljava/util/List<Lcom/kgalligan/partyclicker/data/Person;>;", "LPTAutoValue_MemParty_Builder;" };
  static const J2ObjcClassInfo _PTAutoValue_MemParty = { "AutoValue_MemParty", "com.kgalligan.partyclicker.test", ptrTable, methods, fields, 7, 0x10, 7, 4, -1, 8, -1, -1, -1 };
  return &_PTAutoValue_MemParty;
}

@end

void PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(PTAutoValue_MemParty *self, jlong id_, NSString *name, jlong created, id<JavaUtilList> people) {
  PTMemParty_init(self);
  self->id__ = id_;
  JreStrongAssign(&self->name_, name);
  self->created_ = created;
  JreStrongAssign(&self->people_, people);
}

PTAutoValue_MemParty *new_PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(jlong id_, NSString *name, jlong created, id<JavaUtilList> people) {
  J2OBJC_NEW_IMPL(PTAutoValue_MemParty, initWithLong_withNSString_withLong_withJavaUtilList_, id_, name, created, people)
}

PTAutoValue_MemParty *create_PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_(jlong id_, NSString *name, jlong created, id<JavaUtilList> people) {
  J2OBJC_CREATE_IMPL(PTAutoValue_MemParty, initWithLong_withNSString_withLong_withJavaUtilList_, id_, name, created, people)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PTAutoValue_MemParty)

@implementation PTAutoValue_MemParty_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  PTAutoValue_MemParty_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithPTMemParty:(PTMemParty *)source {
  PTAutoValue_MemParty_Builder_initWithPTMemParty_(self, source);
  return self;
}

- (PTMemParty_Builder *)setIdWithLong:(jlong)id_ {
  JreStrongAssign(&self->id__, JavaLangLong_valueOfWithLong_(id_));
  return self;
}

- (PTMemParty_Builder *)setNameWithNSString:(NSString *)name {
  JreStrongAssign(&self->name_, name);
  return self;
}

- (PTMemParty_Builder *)setCreatedWithLong:(jlong)created {
  JreStrongAssign(&self->created_, JavaLangLong_valueOfWithLong_(created));
  return self;
}

- (PTMemParty_Builder *)setPeopleWithJavaUtilList:(id<JavaUtilList>)people {
  JreStrongAssign(&self->people_, people);
  return self;
}

- (PTMemParty *)build {
  NSString *missing = @"";
  if (id__ == nil) {
    JreStrAppend(&missing, "$", @" id");
  }
  if (name_ == nil) {
    JreStrAppend(&missing, "$", @" name");
  }
  if (created_ == nil) {
    JreStrAppend(&missing, "$", @" created");
  }
  if (people_ == nil) {
    JreStrAppend(&missing, "$", @" people");
  }
  if (![missing java_isEmpty]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Missing required properties:", missing));
  }
  return create_PTAutoValue_MemParty_initWithLong_withNSString_withLong_withJavaUtilList_([((JavaLangLong *) nil_chk(self->id__)) longLongValue], self->name_, [((JavaLangLong *) nil_chk(self->created_)) longLongValue], self->people_);
}

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(name_);
  RELEASE_(created_);
  RELEASE_(people_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LPTMemParty_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LPTMemParty_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LPTMemParty_Builder;", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LPTMemParty_Builder;", 0x1, 6, 7, -1, 8, -1, -1 },
    { NULL, "LPTMemParty;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithPTMemParty:);
  methods[2].selector = @selector(setIdWithLong:);
  methods[3].selector = @selector(setNameWithNSString:);
  methods[4].selector = @selector(setCreatedWithLong:);
  methods[5].selector = @selector(setPeopleWithJavaUtilList:);
  methods[6].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LJavaLangLong;", .constantValue.asLong = 0, 0x2, 9, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "created_", "LJavaLangLong;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "people_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LPTMemParty;", "setId", "J", "setName", "LNSString;", "setCreated", "setPeople", "LJavaUtilList;", "(Ljava/util/List<Lcom/kgalligan/partyclicker/data/Person;>;)Lcom/kgalligan/partyclicker/test/MemParty$Builder;", "id", "Ljava/util/List<Lcom/kgalligan/partyclicker/data/Person;>;", "LPTAutoValue_MemParty;" };
  static const J2ObjcClassInfo _PTAutoValue_MemParty_Builder = { "Builder", "com.kgalligan.partyclicker.test", ptrTable, methods, fields, 7, 0x18, 7, 4, 11, -1, -1, -1, -1 };
  return &_PTAutoValue_MemParty_Builder;
}

@end

void PTAutoValue_MemParty_Builder_init(PTAutoValue_MemParty_Builder *self) {
  PTMemParty_Builder_init(self);
}

PTAutoValue_MemParty_Builder *new_PTAutoValue_MemParty_Builder_init() {
  J2OBJC_NEW_IMPL(PTAutoValue_MemParty_Builder, init)
}

PTAutoValue_MemParty_Builder *create_PTAutoValue_MemParty_Builder_init() {
  J2OBJC_CREATE_IMPL(PTAutoValue_MemParty_Builder, init)
}

void PTAutoValue_MemParty_Builder_initWithPTMemParty_(PTAutoValue_MemParty_Builder *self, PTMemParty *source) {
  PTMemParty_Builder_init(self);
  JreStrongAssign(&self->id__, JavaLangLong_valueOfWithLong_([((PTMemParty *) nil_chk(source)) id__]));
  JreStrongAssign(&self->name_, [source name]);
  JreStrongAssign(&self->created_, JavaLangLong_valueOfWithLong_([source created]));
  JreStrongAssign(&self->people_, [source people]);
}

PTAutoValue_MemParty_Builder *new_PTAutoValue_MemParty_Builder_initWithPTMemParty_(PTMemParty *source) {
  J2OBJC_NEW_IMPL(PTAutoValue_MemParty_Builder, initWithPTMemParty_, source)
}

PTAutoValue_MemParty_Builder *create_PTAutoValue_MemParty_Builder_initWithPTMemParty_(PTMemParty *source) {
  J2OBJC_CREATE_IMPL(PTAutoValue_MemParty_Builder, initWithPTMemParty_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PTAutoValue_MemParty_Builder)

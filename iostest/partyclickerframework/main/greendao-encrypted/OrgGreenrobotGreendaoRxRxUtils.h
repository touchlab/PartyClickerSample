//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgGreenrobotGreendaoRxRxUtils")
#ifdef RESTRICT_OrgGreenrobotGreendaoRxRxUtils
#define INCLUDE_ALL_OrgGreenrobotGreendaoRxRxUtils 0
#else
#define INCLUDE_ALL_OrgGreenrobotGreendaoRxRxUtils 1
#endif
#undef RESTRICT_OrgGreenrobotGreendaoRxRxUtils

#if !defined (OrgGreenrobotGreendaoRxRxUtils_) && (INCLUDE_ALL_OrgGreenrobotGreendaoRxRxUtils || defined(INCLUDE_OrgGreenrobotGreendaoRxRxUtils))
#define OrgGreenrobotGreendaoRxRxUtils_

@class RxObservable;
@protocol JavaUtilConcurrentCallable;

@interface OrgGreenrobotGreendaoRxRxUtils : NSObject

#pragma mark Package-Private

- (instancetype)init;

+ (RxObservable *)fromCallableWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGreenrobotGreendaoRxRxUtils)

FOUNDATION_EXPORT void OrgGreenrobotGreendaoRxRxUtils_init(OrgGreenrobotGreendaoRxRxUtils *self);

FOUNDATION_EXPORT OrgGreenrobotGreendaoRxRxUtils *new_OrgGreenrobotGreendaoRxRxUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgGreenrobotGreendaoRxRxUtils *create_OrgGreenrobotGreendaoRxRxUtils_init();

FOUNDATION_EXPORT RxObservable *OrgGreenrobotGreendaoRxRxUtils_fromCallableWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable);

J2OBJC_TYPE_LITERAL_HEADER(OrgGreenrobotGreendaoRxRxUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgGreenrobotGreendaoRxRxUtils")

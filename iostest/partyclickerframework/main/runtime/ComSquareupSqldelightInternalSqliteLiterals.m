//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComSquareupSqldelightInternalSqliteLiterals.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/AssertionError.h"
#include "java/lang/StringBuilder.h"

@interface ComSquareupSqldelightInternalSqliteLiterals ()

- (instancetype)init;

@end

inline IOSCharArray *ComSquareupSqldelightInternalSqliteLiterals_get_HEX();
static IOSCharArray *ComSquareupSqldelightInternalSqliteLiterals_HEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupSqldelightInternalSqliteLiterals, HEX, IOSCharArray *)

__attribute__((unused)) static void ComSquareupSqldelightInternalSqliteLiterals_init(ComSquareupSqldelightInternalSqliteLiterals *self);

__attribute__((unused)) static ComSquareupSqldelightInternalSqliteLiterals *new_ComSquareupSqldelightInternalSqliteLiterals_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupSqldelightInternalSqliteLiterals *create_ComSquareupSqldelightInternalSqliteLiterals_init();

J2OBJC_INITIALIZED_DEFN(ComSquareupSqldelightInternalSqliteLiterals)

@implementation ComSquareupSqldelightInternalSqliteLiterals

+ (NSString *)forBlobWithByteArray:(IOSByteArray *)bytes {
  return ComSquareupSqldelightInternalSqliteLiterals_forBlobWithByteArray_(bytes);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupSqldelightInternalSqliteLiterals_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(forBlobWithByteArray:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HEX", "[C", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "forBlob", "[B", &ComSquareupSqldelightInternalSqliteLiterals_HEX };
  static const J2ObjcClassInfo _ComSquareupSqldelightInternalSqliteLiterals = { "SqliteLiterals", "com.squareup.sqldelight.internal", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, -1, -1 };
  return &_ComSquareupSqldelightInternalSqliteLiterals;
}

+ (void)initialize {
  if (self == [ComSquareupSqldelightInternalSqliteLiterals class]) {
    JreStrongAssignAndConsume(&ComSquareupSqldelightInternalSqliteLiterals_HEX, [IOSCharArray newArrayWithChars:(jchar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' } count:16]);
    J2OBJC_SET_INITIALIZED(ComSquareupSqldelightInternalSqliteLiterals)
  }
}

@end

NSString *ComSquareupSqldelightInternalSqliteLiterals_forBlobWithByteArray_(IOSByteArray *bytes) {
  ComSquareupSqldelightInternalSqliteLiterals_initialize();
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithInt_(((IOSByteArray *) nil_chk(bytes))->size_ * 2 + 3);
  [builder appendWithNSString:@"x'"];
  {
    IOSByteArray *a__ = bytes;
    jbyte const *b__ = a__->buffer_;
    jbyte const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jbyte b = *b__++;
      [builder appendWithChar:IOSCharArray_Get(nil_chk(ComSquareupSqldelightInternalSqliteLiterals_HEX), (JreRShift32(b, 4)) & (jint) 0xf)];
      [builder appendWithChar:IOSCharArray_Get(ComSquareupSqldelightInternalSqliteLiterals_HEX, b & (jint) 0xf)];
    }
  }
  return [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'\''])) description];
}

void ComSquareupSqldelightInternalSqliteLiterals_init(ComSquareupSqldelightInternalSqliteLiterals *self) {
  NSObject_init(self);
  @throw create_JavaLangAssertionError_init();
}

ComSquareupSqldelightInternalSqliteLiterals *new_ComSquareupSqldelightInternalSqliteLiterals_init() {
  J2OBJC_NEW_IMPL(ComSquareupSqldelightInternalSqliteLiterals, init)
}

ComSquareupSqldelightInternalSqliteLiterals *create_ComSquareupSqldelightInternalSqliteLiterals_init() {
  J2OBJC_CREATE_IMPL(ComSquareupSqldelightInternalSqliteLiterals, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupSqldelightInternalSqliteLiterals)

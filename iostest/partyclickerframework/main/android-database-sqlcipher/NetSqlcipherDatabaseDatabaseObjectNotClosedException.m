//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "NetSqlcipherDatabaseDatabaseObjectNotClosedException.h"
#include "java/lang/RuntimeException.h"

inline NSString *NetSqlcipherDatabaseDatabaseObjectNotClosedException_get_s();
static NSString *NetSqlcipherDatabaseDatabaseObjectNotClosedException_s = @"Application did not close the cursor or database object that was opened here";
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetSqlcipherDatabaseDatabaseObjectNotClosedException, s, NSString *)

@implementation NetSqlcipherDatabaseDatabaseObjectNotClosedException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetSqlcipherDatabaseDatabaseObjectNotClosedException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &NetSqlcipherDatabaseDatabaseObjectNotClosedException_s };
  static const J2ObjcClassInfo _NetSqlcipherDatabaseDatabaseObjectNotClosedException = { "DatabaseObjectNotClosedException", "net.sqlcipher.database", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_NetSqlcipherDatabaseDatabaseObjectNotClosedException;
}

@end

void NetSqlcipherDatabaseDatabaseObjectNotClosedException_init(NetSqlcipherDatabaseDatabaseObjectNotClosedException *self) {
  JavaLangRuntimeException_initWithNSString_(self, NetSqlcipherDatabaseDatabaseObjectNotClosedException_s);
}

NetSqlcipherDatabaseDatabaseObjectNotClosedException *new_NetSqlcipherDatabaseDatabaseObjectNotClosedException_init() {
  J2OBJC_NEW_IMPL(NetSqlcipherDatabaseDatabaseObjectNotClosedException, init)
}

NetSqlcipherDatabaseDatabaseObjectNotClosedException *create_NetSqlcipherDatabaseDatabaseObjectNotClosedException_init() {
  J2OBJC_CREATE_IMPL(NetSqlcipherDatabaseDatabaseObjectNotClosedException, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetSqlcipherDatabaseDatabaseObjectNotClosedException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherMatrixCursor")
#ifdef RESTRICT_NetSqlcipherMatrixCursor
#define INCLUDE_ALL_NetSqlcipherMatrixCursor 0
#else
#define INCLUDE_ALL_NetSqlcipherMatrixCursor 1
#endif
#undef RESTRICT_NetSqlcipherMatrixCursor

#if !defined (NetSqlcipherMatrixCursor_) && (INCLUDE_ALL_NetSqlcipherMatrixCursor || defined(INCLUDE_NetSqlcipherMatrixCursor))
#define NetSqlcipherMatrixCursor_

#define RESTRICT_NetSqlcipherAbstractCursor 1
#define INCLUDE_NetSqlcipherAbstractCursor 1
#include "NetSqlcipherAbstractCursor.h"

@class IOSObjectArray;
@class NetSqlcipherMatrixCursor_RowBuilder;
@protocol JavaLangIterable;

@interface NetSqlcipherMatrixCursor : NetSqlcipherAbstractCursor

#pragma mark Public

- (instancetype)initWithNSStringArray:(IOSObjectArray *)columnNames;

- (instancetype)initWithNSStringArray:(IOSObjectArray *)columnNames
                              withInt:(jint)initialCapacity;

- (void)addRowWithJavaLangIterable:(id<JavaLangIterable>)columnValues;

- (void)addRowWithNSObjectArray:(IOSObjectArray *)columnValues;

- (IOSObjectArray *)getColumnNames;

- (jint)getCount;

- (jdouble)getDoubleWithInt:(jint)column;

- (jfloat)getFloatWithInt:(jint)column;

- (jint)getIntWithInt:(jint)column;

- (jlong)getLongWithInt:(jint)column;

- (jshort)getShortWithInt:(jint)column;

- (NSString *)getStringWithInt:(jint)column;

- (jint)getTypeWithInt:(jint)column;

- (jboolean)isNullWithInt:(jint)column;

- (NetSqlcipherMatrixCursor_RowBuilder *)newRow OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherMatrixCursor)

FOUNDATION_EXPORT void NetSqlcipherMatrixCursor_initWithNSStringArray_withInt_(NetSqlcipherMatrixCursor *self, IOSObjectArray *columnNames, jint initialCapacity);

FOUNDATION_EXPORT NetSqlcipherMatrixCursor *new_NetSqlcipherMatrixCursor_initWithNSStringArray_withInt_(IOSObjectArray *columnNames, jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherMatrixCursor *create_NetSqlcipherMatrixCursor_initWithNSStringArray_withInt_(IOSObjectArray *columnNames, jint initialCapacity);

FOUNDATION_EXPORT void NetSqlcipherMatrixCursor_initWithNSStringArray_(NetSqlcipherMatrixCursor *self, IOSObjectArray *columnNames);

FOUNDATION_EXPORT NetSqlcipherMatrixCursor *new_NetSqlcipherMatrixCursor_initWithNSStringArray_(IOSObjectArray *columnNames) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherMatrixCursor *create_NetSqlcipherMatrixCursor_initWithNSStringArray_(IOSObjectArray *columnNames);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherMatrixCursor)

#endif

#if !defined (NetSqlcipherMatrixCursor_RowBuilder_) && (INCLUDE_ALL_NetSqlcipherMatrixCursor || defined(INCLUDE_NetSqlcipherMatrixCursor_RowBuilder))
#define NetSqlcipherMatrixCursor_RowBuilder_

@class NetSqlcipherMatrixCursor;

@interface NetSqlcipherMatrixCursor_RowBuilder : NSObject

#pragma mark Public

- (NetSqlcipherMatrixCursor_RowBuilder *)addWithId:(id)columnValue;

#pragma mark Package-Private

- (instancetype)initWithNetSqlcipherMatrixCursor:(NetSqlcipherMatrixCursor *)outer$
                                         withInt:(jint)index
                                         withInt:(jint)endIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherMatrixCursor_RowBuilder)

FOUNDATION_EXPORT void NetSqlcipherMatrixCursor_RowBuilder_initWithNetSqlcipherMatrixCursor_withInt_withInt_(NetSqlcipherMatrixCursor_RowBuilder *self, NetSqlcipherMatrixCursor *outer$, jint index, jint endIndex);

FOUNDATION_EXPORT NetSqlcipherMatrixCursor_RowBuilder *new_NetSqlcipherMatrixCursor_RowBuilder_initWithNetSqlcipherMatrixCursor_withInt_withInt_(NetSqlcipherMatrixCursor *outer$, jint index, jint endIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetSqlcipherMatrixCursor_RowBuilder *create_NetSqlcipherMatrixCursor_RowBuilder_initWithNetSqlcipherMatrixCursor_withInt_withInt_(NetSqlcipherMatrixCursor *outer$, jint index, jint endIndex);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherMatrixCursor_RowBuilder)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherMatrixCursor")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidDatabaseCursorWrapper.h"
#include "J2ObjC_source.h"
#include "NetSqlcipherCursor.h"
#include "NetSqlcipherCursorWrapper.h"

@interface NetSqlcipherCursorWrapper () {
 @public
  id<NetSqlcipherCursor> mCursor_CursorWrapper_;
}

@end

J2OBJC_FIELD_SETTER(NetSqlcipherCursorWrapper, mCursor_CursorWrapper_, id<NetSqlcipherCursor>)

@implementation NetSqlcipherCursorWrapper

- (instancetype)initWithNetSqlcipherCursor:(id<NetSqlcipherCursor>)cursor {
  NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(self, cursor);
  return self;
}

- (jint)getTypeWithInt:(jint)columnIndex {
  return [((id<NetSqlcipherCursor>) nil_chk(mCursor_CursorWrapper_)) getTypeWithInt:columnIndex];
}

- (id<NetSqlcipherCursor>)getWrappedCursor {
  return mCursor_CursorWrapper_;
}

- (void)dealloc {
  RELEASE_(mCursor_CursorWrapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNetSqlcipherCursor;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNetSqlcipherCursor:);
  methods[1].selector = @selector(getTypeWithInt:);
  methods[2].selector = @selector(getWrappedCursor);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCursor_CursorWrapper_", "LNetSqlcipherCursor;", .constantValue.asLong = 0, 0x12, 3, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetSqlcipherCursor;", "getType", "I", "mCursor" };
  static const J2ObjcClassInfo _NetSqlcipherCursorWrapper = { "CursorWrapper", "net.sqlcipher", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_NetSqlcipherCursorWrapper;
}

@end

void NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(NetSqlcipherCursorWrapper *self, id<NetSqlcipherCursor> cursor) {
  AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(self, cursor);
  JreStrongAssign(&self->mCursor_CursorWrapper_, cursor);
}

NetSqlcipherCursorWrapper *new_NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(id<NetSqlcipherCursor> cursor) {
  J2OBJC_NEW_IMPL(NetSqlcipherCursorWrapper, initWithNetSqlcipherCursor_, cursor)
}

NetSqlcipherCursorWrapper *create_NetSqlcipherCursorWrapper_initWithNetSqlcipherCursor_(id<NetSqlcipherCursor> cursor) {
  J2OBJC_CREATE_IMPL(NetSqlcipherCursorWrapper, initWithNetSqlcipherCursor_, cursor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetSqlcipherCursorWrapper)

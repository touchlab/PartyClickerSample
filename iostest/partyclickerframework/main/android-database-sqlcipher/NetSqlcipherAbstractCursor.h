//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetSqlcipherAbstractCursor")
#ifdef RESTRICT_NetSqlcipherAbstractCursor
#define INCLUDE_ALL_NetSqlcipherAbstractCursor 0
#else
#define INCLUDE_ALL_NetSqlcipherAbstractCursor 1
#endif
#undef RESTRICT_NetSqlcipherAbstractCursor

#if !defined (NetSqlcipherAbstractCursor_) && (INCLUDE_ALL_NetSqlcipherAbstractCursor || defined(INCLUDE_NetSqlcipherAbstractCursor))
#define NetSqlcipherAbstractCursor_

#define RESTRICT_AndroidDatabaseCrossProcessCursor 1
#define INCLUDE_AndroidDatabaseCrossProcessCursor 1
#include "AndroidDatabaseCrossProcessCursor.h"

#define RESTRICT_NetSqlcipherCursor 1
#define INCLUDE_NetSqlcipherCursor 1
#include "NetSqlcipherCursor.h"

@class AndroidDatabaseCharArrayBuffer;
@class AndroidDatabaseCursorWindow;
@class AndroidDatabaseDataSetObservable;
@class AndroidDatabaseDataSetObserver;
@class AndroidOsBundle;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaLangLong;
@class JavaUtilHashMap;
@class NetSqlcipherCursorWindow;
@protocol JavaUtilMap;

@interface NetSqlcipherAbstractCursor : NSObject < AndroidDatabaseCrossProcessCursor, NetSqlcipherCursor > {
 @public
  AndroidDatabaseDataSetObservable *mDataSetObservable_;
  JavaUtilHashMap *mUpdatedRows_;
  jint mRowIdColumnIndex_;
  jint mPos_;
  JavaLangLong *mCurrentRowID_;
  jboolean mClosed_;
}

#pragma mark Public

- (instancetype)init;

- (void)abortUpdates;

- (void)close;

- (jboolean)commitUpdates;

- (jboolean)commitUpdatesWithJavaUtilMap:(id<JavaUtilMap>)values;

- (void)copyStringToBufferWithInt:(jint)columnIndex
withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;

- (void)deactivate;

- (void)deactivateInternal;

- (jboolean)deleteRow;

- (void)fillWindowWithInt:(jint)position
withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;

- (IOSByteArray *)getBlobWithInt:(jint)column;

- (jint)getColumnCount;

- (jint)getColumnIndexWithNSString:(NSString *)columnName;

- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName;

- (NSString *)getColumnNameWithInt:(jint)columnIndex;

- (IOSObjectArray *)getColumnNames;

- (jint)getCount;

- (jdouble)getDoubleWithInt:(jint)column;

- (AndroidOsBundle *)getExtras;

- (jfloat)getFloatWithInt:(jint)column;

- (jint)getIntWithInt:(jint)column;

- (jlong)getLongWithInt:(jint)column;

- (jint)getPosition;

- (jshort)getShortWithInt:(jint)column;

- (NSString *)getStringWithInt:(jint)column;

- (jint)getTypeWithInt:(jint)column;

- (jboolean)getWantsAllOnMoveCalls;

- (NetSqlcipherCursorWindow *)getWindow;

- (jboolean)hasUpdates;

- (jboolean)isAfterLast;

- (jboolean)isBeforeFirst;

- (jboolean)isClosed;

- (jboolean)isFirst;

- (jboolean)isLast;

- (jboolean)isNullWithInt:(jint)column;

- (jboolean)moveWithInt:(jint)offset;

- (jboolean)moveToFirst;

- (jboolean)moveToLast;

- (jboolean)moveToNext;

- (jboolean)moveToPositionWithInt:(jint)position;

- (jboolean)moveToPrevious;

- (jboolean)onMoveWithInt:(jint)oldPosition
                  withInt:(jint)newPosition;

- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;

- (jboolean)requery;

- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras;

- (void)setExtrasWithAndroidOsBundle:(AndroidOsBundle *)extras;

- (jboolean)supportsUpdates;

- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;

- (jboolean)updateWithInt:(jint)columnIndex
                   withId:(id)obj;

- (jboolean)updateBlobWithInt:(jint)columnIndex
                withByteArray:(IOSByteArray *)value;

- (jboolean)updateDoubleWithInt:(jint)columnIndex
                     withDouble:(jdouble)value;

- (jboolean)updateFloatWithInt:(jint)columnIndex
                     withFloat:(jfloat)value;

- (jboolean)updateIntWithInt:(jint)columnIndex
                     withInt:(jint)value;

- (jboolean)updateLongWithInt:(jint)columnIndex
                     withLong:(jlong)value;

- (jboolean)updateShortWithInt:(jint)columnIndex
                     withShort:(jshort)value;

- (jboolean)updateStringWithInt:(jint)columnIndex
                   withNSString:(NSString *)value;

- (jboolean)updateToNullWithInt:(jint)columnIndex;

#pragma mark Protected

- (void)checkPosition;

- (void)java_finalize;

- (AndroidDatabaseDataSetObservable *)getDataSetObservable;

- (id)getUpdatedFieldWithInt:(jint)columnIndex;

- (jboolean)isFieldUpdatedWithInt:(jint)columnIndex;

- (void)notifyDataSetChange;

- (void)onChangeWithBoolean:(jboolean)selfChange;

@end

J2OBJC_EMPTY_STATIC_INIT(NetSqlcipherAbstractCursor)

J2OBJC_FIELD_SETTER(NetSqlcipherAbstractCursor, mDataSetObservable_, AndroidDatabaseDataSetObservable *)
J2OBJC_FIELD_SETTER(NetSqlcipherAbstractCursor, mUpdatedRows_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(NetSqlcipherAbstractCursor, mCurrentRowID_, JavaLangLong *)

FOUNDATION_EXPORT void NetSqlcipherAbstractCursor_init(NetSqlcipherAbstractCursor *self);

J2OBJC_TYPE_LITERAL_HEADER(NetSqlcipherAbstractCursor)

#endif

#pragma pop_macro("INCLUDE_ALL_NetSqlcipherAbstractCursor")

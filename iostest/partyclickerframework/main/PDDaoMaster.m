//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoAbstractDaoMaster.h"
#include "OrgGreenrobotGreendaoDatabaseDatabase.h"
#include "OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper.h"
#include "OrgGreenrobotGreendaoDatabaseStandardDatabase.h"
#include "OrgGreenrobotGreendaoIdentityscopeIdentityScopeType.h"
#include "PDDaoMaster.h"
#include "PDDaoSession.h"
#include "PDPartyDao.h"
#include "PDPersonDao.h"
#include "android/util/Log.h"
#include "java/util/Map.h"

@implementation PDDaoMaster

+ (void)createAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                                     withBoolean:(jboolean)ifNotExists {
  PDDaoMaster_createAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, ifNotExists);
}

+ (void)dropAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                                   withBoolean:(jboolean)ifExists {
  PDDaoMaster_dropAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, ifExists);
}

+ (PDDaoSession *)newDevSessionWithAndroidContentContext:(AndroidContentContext *)context
                                            withNSString:(NSString *)name {
  return PDDaoMaster_newDevSessionWithAndroidContentContext_withNSString_(context, name);
}

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  PDDaoMaster_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, db);
  return self;
}

- (instancetype)initWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db {
  PDDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_(self, db);
  return self;
}

- (PDDaoSession *)newSession {
  return create_PDDaoSession_initWithOrgGreenrobotGreendaoDatabaseDatabase_withOrgGreenrobotGreendaoIdentityscopeIdentityScopeType_withJavaUtilMap_(db_, JreLoadEnum(OrgGreenrobotGreendaoIdentityscopeIdentityScopeType, Session), daoConfigMap_);
}

- (PDDaoSession *)newSessionWithOrgGreenrobotGreendaoIdentityscopeIdentityScopeType:(OrgGreenrobotGreendaoIdentityscopeIdentityScopeType *)type {
  return create_PDDaoSession_initWithOrgGreenrobotGreendaoDatabaseDatabase_withOrgGreenrobotGreendaoIdentityscopeIdentityScopeType_withJavaUtilMap_(db_, type, daoConfigMap_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LPDDaoSession;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "LPDDaoSession;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LPDDaoSession;", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase:withBoolean:);
  methods[1].selector = @selector(dropAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase:withBoolean:);
  methods[2].selector = @selector(newDevSessionWithAndroidContentContext:withNSString:);
  methods[3].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[4].selector = @selector(initWithOrgGreenrobotGreendaoDatabaseDatabase:);
  methods[5].selector = @selector(newSession);
  methods[6].selector = @selector(newSessionWithOrgGreenrobotGreendaoIdentityscopeIdentityScopeType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SCHEMA_VERSION", "I", .constantValue.asInt = PDDaoMaster_SCHEMA_VERSION, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createAllTables", "LOrgGreenrobotGreendaoDatabaseDatabase;Z", "dropAllTables", "newDevSession", "LAndroidContentContext;LNSString;", "LAndroidDatabaseSqliteSQLiteDatabase;", "LOrgGreenrobotGreendaoDatabaseDatabase;", "newSession", "LOrgGreenrobotGreendaoIdentityscopeIdentityScopeType;", "LPDDaoMaster_OpenHelper;LPDDaoMaster_DevOpenHelper;" };
  static const J2ObjcClassInfo _PDDaoMaster = { "DaoMaster", "com.kgalligan.partyclicker.data", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, 9, -1, -1, -1 };
  return &_PDDaoMaster;
}

@end

void PDDaoMaster_createAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(id<OrgGreenrobotGreendaoDatabaseDatabase> db, jboolean ifNotExists) {
  PDDaoMaster_initialize();
  PDPartyDao_createTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, ifNotExists);
  PDPersonDao_createTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, ifNotExists);
}

void PDDaoMaster_dropAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(id<OrgGreenrobotGreendaoDatabaseDatabase> db, jboolean ifExists) {
  PDDaoMaster_initialize();
  PDPartyDao_dropTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, ifExists);
  PDPersonDao_dropTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, ifExists);
}

PDDaoSession *PDDaoMaster_newDevSessionWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *name) {
  PDDaoMaster_initialize();
  id<OrgGreenrobotGreendaoDatabaseDatabase> db = [create_PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_(context, name) getWritableDb];
  PDDaoMaster *daoMaster = create_PDDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_(db);
  return [daoMaster newSession];
}

void PDDaoMaster_initWithAndroidDatabaseSqliteSQLiteDatabase_(PDDaoMaster *self, AndroidDatabaseSqliteSQLiteDatabase *db) {
  PDDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_(self, create_OrgGreenrobotGreendaoDatabaseStandardDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(db));
}

PDDaoMaster *new_PDDaoMaster_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *db) {
  J2OBJC_NEW_IMPL(PDDaoMaster, initWithAndroidDatabaseSqliteSQLiteDatabase_, db)
}

PDDaoMaster *create_PDDaoMaster_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *db) {
  J2OBJC_CREATE_IMPL(PDDaoMaster, initWithAndroidDatabaseSqliteSQLiteDatabase_, db)
}

void PDDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_(PDDaoMaster *self, id<OrgGreenrobotGreendaoDatabaseDatabase> db) {
  OrgGreenrobotGreendaoAbstractDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_withInt_(self, db, PDDaoMaster_SCHEMA_VERSION);
  [self registerDaoClassWithIOSClass:PDPartyDao_class_()];
  [self registerDaoClassWithIOSClass:PDPersonDao_class_()];
}

PDDaoMaster *new_PDDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_(id<OrgGreenrobotGreendaoDatabaseDatabase> db) {
  J2OBJC_NEW_IMPL(PDDaoMaster, initWithOrgGreenrobotGreendaoDatabaseDatabase_, db)
}

PDDaoMaster *create_PDDaoMaster_initWithOrgGreenrobotGreendaoDatabaseDatabase_(id<OrgGreenrobotGreendaoDatabaseDatabase> db) {
  J2OBJC_CREATE_IMPL(PDDaoMaster, initWithOrgGreenrobotGreendaoDatabaseDatabase_, db)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDDaoMaster)

@implementation PDDaoMaster_OpenHelper

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name {
  PDDaoMaster_OpenHelper_initWithAndroidContentContext_withNSString_(self, context, name);
  return self;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
  PDDaoMaster_OpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(self, context, name, factory);
  return self;
}

- (void)onCreateWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db {
  AndroidUtilLog_iWithNSString_withNSString_(@"greenDAO", JreStrcat("$I", @"Creating tables for schema version ", PDDaoMaster_SCHEMA_VERSION));
  PDDaoMaster_createAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidContentContext:withNSString:);
  methods[1].selector = @selector(initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
  methods[2].selector = @selector(onCreateWithOrgGreenrobotGreendaoDatabaseDatabase:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidContentContext;LNSString;", "LAndroidContentContext;LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "onCreate", "LOrgGreenrobotGreendaoDatabaseDatabase;", "LPDDaoMaster;" };
  static const J2ObjcClassInfo _PDDaoMaster_OpenHelper = { "OpenHelper", "com.kgalligan.partyclicker.data", ptrTable, methods, NULL, 7, 0x409, 3, 0, 4, -1, -1, -1, -1 };
  return &_PDDaoMaster_OpenHelper;
}

@end

void PDDaoMaster_OpenHelper_initWithAndroidContentContext_withNSString_(PDDaoMaster_OpenHelper *self, AndroidContentContext *context, NSString *name) {
  OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withInt_(self, context, name, PDDaoMaster_SCHEMA_VERSION);
}

void PDDaoMaster_OpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(PDDaoMaster_OpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
  OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, factory, PDDaoMaster_SCHEMA_VERSION);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDDaoMaster_OpenHelper)

@implementation PDDaoMaster_DevOpenHelper

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name {
  PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_(self, context, name);
  return self;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
  PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(self, context, name, factory);
  return self;
}

- (void)onUpgradeWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                                   withInt:(jint)oldVersion
                                                   withInt:(jint)newVersion {
  AndroidUtilLog_iWithNSString_withNSString_(@"greenDAO", JreStrcat("$I$I$", @"Upgrading schema from version ", oldVersion, @" to ", newVersion, @" by dropping all tables"));
  PDDaoMaster_dropAllTablesWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(db, true);
  [self onCreateWithOrgGreenrobotGreendaoDatabaseDatabase:db];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidContentContext:withNSString:);
  methods[1].selector = @selector(initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
  methods[2].selector = @selector(onUpgradeWithOrgGreenrobotGreendaoDatabaseDatabase:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidContentContext;LNSString;", "LAndroidContentContext;LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "onUpgrade", "LOrgGreenrobotGreendaoDatabaseDatabase;II", "LPDDaoMaster;" };
  static const J2ObjcClassInfo _PDDaoMaster_DevOpenHelper = { "DevOpenHelper", "com.kgalligan.partyclicker.data", ptrTable, methods, NULL, 7, 0x9, 3, 0, 4, -1, -1, -1, -1 };
  return &_PDDaoMaster_DevOpenHelper;
}

@end

void PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_(PDDaoMaster_DevOpenHelper *self, AndroidContentContext *context, NSString *name) {
  PDDaoMaster_OpenHelper_initWithAndroidContentContext_withNSString_(self, context, name);
}

PDDaoMaster_DevOpenHelper *new_PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *name) {
  J2OBJC_NEW_IMPL(PDDaoMaster_DevOpenHelper, initWithAndroidContentContext_withNSString_, context, name)
}

PDDaoMaster_DevOpenHelper *create_PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *name) {
  J2OBJC_CREATE_IMPL(PDDaoMaster_DevOpenHelper, initWithAndroidContentContext_withNSString_, context, name)
}

void PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(PDDaoMaster_DevOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
  PDDaoMaster_OpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(self, context, name, factory);
}

PDDaoMaster_DevOpenHelper *new_PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
  J2OBJC_NEW_IMPL(PDDaoMaster_DevOpenHelper, initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_, context, name, factory)
}

PDDaoMaster_DevOpenHelper *create_PDDaoMaster_DevOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
  J2OBJC_CREATE_IMPL(PDDaoMaster_DevOpenHelper, initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_, context, name, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(PDDaoMaster_DevOpenHelper)

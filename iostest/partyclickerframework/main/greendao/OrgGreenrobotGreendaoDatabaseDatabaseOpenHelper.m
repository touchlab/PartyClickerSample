//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentContext.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "AndroidDatabaseSqliteSQLiteOpenHelper.h"
#include "J2ObjC_source.h"
#include "OrgGreenrobotGreendaoDatabaseDatabase.h"
#include "OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper.h"
#include "OrgGreenrobotGreendaoDatabaseStandardDatabase.h"

@interface OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper () {
 @public
  AndroidContentContext *context_;
  NSString *name_;
  jint version__;
  jboolean loadSQLCipherNativeLibs_;
}

@end

J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper, context_, AndroidContentContext *)
J2OBJC_FIELD_SETTER(OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper, name_, NSString *)

@implementation OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
                                      withInt:(jint)version_ {
  OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withInt_(self, context, name, version_);
  return self;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
                                      withInt:(jint)version_ {
  OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, factory, version_);
  return self;
}

- (void)setLoadSQLCipherNativeLibsWithBoolean:(jboolean)loadSQLCipherNativeLibs {
  self->loadSQLCipherNativeLibs_ = loadSQLCipherNativeLibs;
}

- (id<OrgGreenrobotGreendaoDatabaseDatabase>)getWritableDb {
  return [self wrapWithAndroidDatabaseSqliteSQLiteDatabase:[self getWritableDatabase]];
}

- (id<OrgGreenrobotGreendaoDatabaseDatabase>)getReadableDb {
  return [self wrapWithAndroidDatabaseSqliteSQLiteDatabase:[self getReadableDatabase]];
}

- (id<OrgGreenrobotGreendaoDatabaseDatabase>)wrapWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)sqLiteDatabase {
  return create_OrgGreenrobotGreendaoDatabaseStandardDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(sqLiteDatabase);
}

- (void)onCreateWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  [self onCreateWithOrgGreenrobotGreendaoDatabaseDatabase:[self wrapWithAndroidDatabaseSqliteSQLiteDatabase:db]];
}

- (void)onCreateWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db {
}

- (void)onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                                 withInt:(jint)oldVersion
                                                 withInt:(jint)newVersion {
  [self onUpgradeWithOrgGreenrobotGreendaoDatabaseDatabase:[self wrapWithAndroidDatabaseSqliteSQLiteDatabase:db] withInt:oldVersion withInt:newVersion];
}

- (void)onUpgradeWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                                   withInt:(jint)oldVersion
                                                   withInt:(jint)newVersion {
}

- (void)onOpenWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  [self onOpenWithOrgGreenrobotGreendaoDatabaseDatabase:[self wrapWithAndroidDatabaseSqliteSQLiteDatabase:db]];
}

- (void)onOpenWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db {
}

- (void)dealloc {
  RELEASE_(context_);
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoDatabaseDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoDatabaseDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgGreenrobotGreendaoDatabaseDatabase;", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidContentContext:withNSString:withInt:);
  methods[1].selector = @selector(initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:);
  methods[2].selector = @selector(setLoadSQLCipherNativeLibsWithBoolean:);
  methods[3].selector = @selector(getWritableDb);
  methods[4].selector = @selector(getReadableDb);
  methods[5].selector = @selector(wrapWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[6].selector = @selector(onCreateWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[7].selector = @selector(onCreateWithOrgGreenrobotGreendaoDatabaseDatabase:);
  methods[8].selector = @selector(onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:withInt:withInt:);
  methods[9].selector = @selector(onUpgradeWithOrgGreenrobotGreendaoDatabaseDatabase:withInt:withInt:);
  methods[10].selector = @selector(onOpenWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[11].selector = @selector(onOpenWithOrgGreenrobotGreendaoDatabaseDatabase:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "context_", "LAndroidContentContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "version__", "I", .constantValue.asLong = 0, 0x12, 12, -1, -1, -1 },
    { "loadSQLCipherNativeLibs_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidContentContext;LNSString;I", "LAndroidContentContext;LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;I", "setLoadSQLCipherNativeLibs", "Z", "wrap", "LAndroidDatabaseSqliteSQLiteDatabase;", "onCreate", "LOrgGreenrobotGreendaoDatabaseDatabase;", "onUpgrade", "LAndroidDatabaseSqliteSQLiteDatabase;II", "LOrgGreenrobotGreendaoDatabaseDatabase;II", "onOpen", "version" };
  static const J2ObjcClassInfo _OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper = { "DatabaseOpenHelper", "org.greenrobot.greendao.database", ptrTable, methods, fields, 7, 0x401, 12, 4, -1, -1, -1, -1, -1 };
  return &_OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper;
}

@end

void OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withInt_(OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper *self, AndroidContentContext *context, NSString *name, jint version_) {
  OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, nil, version_);
}

void OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_) {
  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, factory, version_);
  self->loadSQLCipherNativeLibs_ = true;
  JreStrongAssign(&self->context_, context);
  JreStrongAssign(&self->name_, name);
  self->version__ = version_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGreenrobotGreendaoDatabaseDatabaseOpenHelper)

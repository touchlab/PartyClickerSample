//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PDPersonDao")
#ifdef RESTRICT_PDPersonDao
#define INCLUDE_ALL_PDPersonDao 0
#else
#define INCLUDE_ALL_PDPersonDao 1
#endif
#undef RESTRICT_PDPersonDao

#if !defined (PDPersonDao_) && (INCLUDE_ALL_PDPersonDao || defined(INCLUDE_PDPersonDao))
#define PDPersonDao_

#define RESTRICT_OrgGreenrobotGreendaoAbstractDao 1
#define INCLUDE_OrgGreenrobotGreendaoAbstractDao 1
#include "OrgGreenrobotGreendaoAbstractDao.h"

@class AndroidDatabaseSqliteSQLiteStatement;
@class IOSObjectArray;
@class JavaLangLong;
@class OrgGreenrobotGreendaoInternalDaoConfig;
@class PDDaoSession;
@class PDPerson;
@protocol AndroidDatabaseCursor;
@protocol JavaUtilList;
@protocol OrgGreenrobotGreendaoDatabaseDatabase;
@protocol OrgGreenrobotGreendaoDatabaseDatabaseStatement;

@interface PDPersonDao : OrgGreenrobotGreendaoAbstractDao

#pragma mark Public

- (instancetype)initWithOrgGreenrobotGreendaoInternalDaoConfig:(OrgGreenrobotGreendaoInternalDaoConfig *)config;

- (instancetype)initWithOrgGreenrobotGreendaoInternalDaoConfig:(OrgGreenrobotGreendaoInternalDaoConfig *)config
                                              withPDDaoSession:(PDDaoSession *)daoSession;

+ (void)createTableWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                                 withBoolean:(jboolean)ifNotExists;

+ (void)dropTableWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                               withBoolean:(jboolean)ifExists;

- (JavaLangLong *)getKeyWithId:(PDPerson *)entity;

- (jboolean)hasKeyWithId:(PDPerson *)entity;

- (PDPerson *)load__WithId:(JavaLangLong *)arg0;

- (id<JavaUtilList>)loadAllDeepFromCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;

- (PDPerson *)loadByRowIdWithLong:(jlong)arg0;

- (PDPerson *)loadDeepWithJavaLangLong:(JavaLangLong *)key;

- (id<JavaUtilList>)queryDeepWithNSString:(NSString *)where
                        withNSStringArray:(IOSObjectArray *)selectionArg;

- (PDPerson *)readEntityWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                          withInt:(jint)offset;

- (void)readEntityWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                     withId:(PDPerson *)entity
                                    withInt:(jint)offset;

- (JavaLangLong *)readKeyWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                           withInt:(jint)offset;

#pragma mark Protected

- (void)attachEntityWithId:(PDPerson *)entity;

- (void)bindValuesWithOrgGreenrobotGreendaoDatabaseDatabaseStatement:(id<OrgGreenrobotGreendaoDatabaseDatabaseStatement>)stmt
                                                              withId:(PDPerson *)entity;

- (void)bindValuesWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)stmt
                                                    withId:(PDPerson *)entity;

- (JavaLangLong *)getKeyVerifiedWithId:(PDPerson *)arg0;

- (NSString *)getSelectDeep;

- (jboolean)isEntityUpdateable;

- (PDPerson *)loadCurrentDeepWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                           withBoolean:(jboolean)lock;

- (PDPerson *)loadCurrentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)arg0
                                           withInt:(jint)arg1
                                       withBoolean:(jboolean)arg2;

- (id<JavaUtilList>)loadDeepAllAndCloseCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;

- (PDPerson *)loadUniqueAndCloseCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)arg0;

- (PDPerson *)loadUniqueWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)arg0;

- (JavaLangLong *)updateKeyAfterInsertWithId:(PDPerson *)entity
                                    withLong:(jlong)rowId;

@end

J2OBJC_EMPTY_STATIC_INIT(PDPersonDao)

inline NSString *PDPersonDao_get_TABLENAME();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PDPersonDao_TABLENAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPersonDao, TABLENAME, NSString *)

FOUNDATION_EXPORT void PDPersonDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_(PDPersonDao *self, OrgGreenrobotGreendaoInternalDaoConfig *config);

FOUNDATION_EXPORT PDPersonDao *new_PDPersonDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_(OrgGreenrobotGreendaoInternalDaoConfig *config) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PDPersonDao *create_PDPersonDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_(OrgGreenrobotGreendaoInternalDaoConfig *config);

FOUNDATION_EXPORT void PDPersonDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_withPDDaoSession_(PDPersonDao *self, OrgGreenrobotGreendaoInternalDaoConfig *config, PDDaoSession *daoSession);

FOUNDATION_EXPORT PDPersonDao *new_PDPersonDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_withPDDaoSession_(OrgGreenrobotGreendaoInternalDaoConfig *config, PDDaoSession *daoSession) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PDPersonDao *create_PDPersonDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_withPDDaoSession_(OrgGreenrobotGreendaoInternalDaoConfig *config, PDDaoSession *daoSession);

FOUNDATION_EXPORT void PDPersonDao_createTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(id<OrgGreenrobotGreendaoDatabaseDatabase> db, jboolean ifNotExists);

FOUNDATION_EXPORT void PDPersonDao_dropTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(id<OrgGreenrobotGreendaoDatabaseDatabase> db, jboolean ifExists);

J2OBJC_TYPE_LITERAL_HEADER(PDPersonDao)

@compatibility_alias ComKgalliganPartyclickerDataPersonDao PDPersonDao;

#endif

#if !defined (PDPersonDao_Properties_) && (INCLUDE_ALL_PDPersonDao || defined(INCLUDE_PDPersonDao_Properties))
#define PDPersonDao_Properties_

@class OrgGreenrobotGreendaoProperty;

@interface PDPersonDao_Properties : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(PDPersonDao_Properties)

inline OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_get_Id();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_Id;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPersonDao_Properties, Id, OrgGreenrobotGreendaoProperty *)

inline OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_get_Recorded();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_Recorded;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPersonDao_Properties, Recorded, OrgGreenrobotGreendaoProperty *)

inline OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_get_Val();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_Val;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPersonDao_Properties, Val, OrgGreenrobotGreendaoProperty *)

inline OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_get_PartyId();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPersonDao_Properties_PartyId;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPersonDao_Properties, PartyId, OrgGreenrobotGreendaoProperty *)

FOUNDATION_EXPORT void PDPersonDao_Properties_init(PDPersonDao_Properties *self);

FOUNDATION_EXPORT PDPersonDao_Properties *new_PDPersonDao_Properties_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PDPersonDao_Properties *create_PDPersonDao_Properties_init();

J2OBJC_TYPE_LITERAL_HEADER(PDPersonDao_Properties)

#endif

#pragma pop_macro("INCLUDE_ALL_PDPersonDao")

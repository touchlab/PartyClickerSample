//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PDPartyDao")
#ifdef RESTRICT_PDPartyDao
#define INCLUDE_ALL_PDPartyDao 0
#else
#define INCLUDE_ALL_PDPartyDao 1
#endif
#undef RESTRICT_PDPartyDao

#if !defined (PDPartyDao_) && (INCLUDE_ALL_PDPartyDao || defined(INCLUDE_PDPartyDao))
#define PDPartyDao_

#define RESTRICT_OrgGreenrobotGreendaoAbstractDao 1
#define INCLUDE_OrgGreenrobotGreendaoAbstractDao 1
#include "OrgGreenrobotGreendaoAbstractDao.h"

@class AndroidDatabaseSqliteSQLiteStatement;
@class JavaLangLong;
@class OrgGreenrobotGreendaoInternalDaoConfig;
@class PDDaoSession;
@class PDParty;
@protocol AndroidDatabaseCursor;
@protocol OrgGreenrobotGreendaoDatabaseDatabase;
@protocol OrgGreenrobotGreendaoDatabaseDatabaseStatement;

@interface PDPartyDao : OrgGreenrobotGreendaoAbstractDao

#pragma mark Public

- (instancetype)initWithOrgGreenrobotGreendaoInternalDaoConfig:(OrgGreenrobotGreendaoInternalDaoConfig *)config;

- (instancetype)initWithOrgGreenrobotGreendaoInternalDaoConfig:(OrgGreenrobotGreendaoInternalDaoConfig *)config
                                              withPDDaoSession:(PDDaoSession *)daoSession;

+ (void)createTableWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                                 withBoolean:(jboolean)ifNotExists;

+ (void)dropTableWithOrgGreenrobotGreendaoDatabaseDatabase:(id<OrgGreenrobotGreendaoDatabaseDatabase>)db
                                               withBoolean:(jboolean)ifExists;

- (JavaLangLong *)getKeyWithId:(PDParty *)entity;

- (jboolean)hasKeyWithId:(PDParty *)entity;

- (PDParty *)load__WithId:(JavaLangLong *)arg0;

- (PDParty *)loadByRowIdWithLong:(jlong)arg0;

- (PDParty *)readEntityWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                         withInt:(jint)offset;

- (void)readEntityWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                     withId:(PDParty *)entity
                                    withInt:(jint)offset;

- (JavaLangLong *)readKeyWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                           withInt:(jint)offset;

#pragma mark Protected

- (void)bindValuesWithOrgGreenrobotGreendaoDatabaseDatabaseStatement:(id<OrgGreenrobotGreendaoDatabaseDatabaseStatement>)stmt
                                                              withId:(PDParty *)entity;

- (void)bindValuesWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)stmt
                                                    withId:(PDParty *)entity;

- (JavaLangLong *)getKeyVerifiedWithId:(PDParty *)arg0;

- (jboolean)isEntityUpdateable;

- (PDParty *)loadCurrentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)arg0
                                          withInt:(jint)arg1
                                      withBoolean:(jboolean)arg2;

- (PDParty *)loadUniqueAndCloseCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)arg0;

- (PDParty *)loadUniqueWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)arg0;

- (JavaLangLong *)updateKeyAfterInsertWithId:(PDParty *)entity
                                    withLong:(jlong)rowId;

@end

J2OBJC_EMPTY_STATIC_INIT(PDPartyDao)

inline NSString *PDPartyDao_get_TABLENAME();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PDPartyDao_TABLENAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPartyDao, TABLENAME, NSString *)

FOUNDATION_EXPORT void PDPartyDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_(PDPartyDao *self, OrgGreenrobotGreendaoInternalDaoConfig *config);

FOUNDATION_EXPORT PDPartyDao *new_PDPartyDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_(OrgGreenrobotGreendaoInternalDaoConfig *config) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PDPartyDao *create_PDPartyDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_(OrgGreenrobotGreendaoInternalDaoConfig *config);

FOUNDATION_EXPORT void PDPartyDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_withPDDaoSession_(PDPartyDao *self, OrgGreenrobotGreendaoInternalDaoConfig *config, PDDaoSession *daoSession);

FOUNDATION_EXPORT PDPartyDao *new_PDPartyDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_withPDDaoSession_(OrgGreenrobotGreendaoInternalDaoConfig *config, PDDaoSession *daoSession) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PDPartyDao *create_PDPartyDao_initWithOrgGreenrobotGreendaoInternalDaoConfig_withPDDaoSession_(OrgGreenrobotGreendaoInternalDaoConfig *config, PDDaoSession *daoSession);

FOUNDATION_EXPORT void PDPartyDao_createTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(id<OrgGreenrobotGreendaoDatabaseDatabase> db, jboolean ifNotExists);

FOUNDATION_EXPORT void PDPartyDao_dropTableWithOrgGreenrobotGreendaoDatabaseDatabase_withBoolean_(id<OrgGreenrobotGreendaoDatabaseDatabase> db, jboolean ifExists);

J2OBJC_TYPE_LITERAL_HEADER(PDPartyDao)

@compatibility_alias ComKgalliganPartyclickerDataPartyDao PDPartyDao;

#endif

#if !defined (PDPartyDao_Properties_) && (INCLUDE_ALL_PDPartyDao || defined(INCLUDE_PDPartyDao_Properties))
#define PDPartyDao_Properties_

@class OrgGreenrobotGreendaoProperty;

@interface PDPartyDao_Properties : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(PDPartyDao_Properties)

inline OrgGreenrobotGreendaoProperty *PDPartyDao_Properties_get_Id();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPartyDao_Properties_Id;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPartyDao_Properties, Id, OrgGreenrobotGreendaoProperty *)

inline OrgGreenrobotGreendaoProperty *PDPartyDao_Properties_get_Name();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPartyDao_Properties_Name;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPartyDao_Properties, Name, OrgGreenrobotGreendaoProperty *)

inline OrgGreenrobotGreendaoProperty *PDPartyDao_Properties_get_Created();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgGreenrobotGreendaoProperty *PDPartyDao_Properties_Created;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PDPartyDao_Properties, Created, OrgGreenrobotGreendaoProperty *)

FOUNDATION_EXPORT void PDPartyDao_Properties_init(PDPartyDao_Properties *self);

FOUNDATION_EXPORT PDPartyDao_Properties *new_PDPartyDao_Properties_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PDPartyDao_Properties *create_PDPartyDao_Properties_init();

J2OBJC_TYPE_LITERAL_HEADER(PDPartyDao_Properties)

#endif

#pragma pop_macro("INCLUDE_ALL_PDPartyDao")
